/*
in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\EST_SALDO_RETAG_PA.sql";

SELECT EST_SALDO_RETAG_PA.DT_HIST_ULTIMA_GET() AS ULTIMA_DATA
FROM RDB$DATABASE;

SELECT EST_SALDO_RETAG_PA.EST_MOV_DTH_MIN_GET() AS DATA_MAIS_ANTIGA
FROM RDB$DATABASE;

SELECT * 
FROM EST_SALDO_RETAG_PA.EST_MOV_ITEM_LISTA_GET(
'01.01.2025', '31.12.2025'
) ;

SELECT * FROM EST_SALDO_ATUAL_DTH;
DELETE FROM EST_SALDO_ATUAL_DTH;
COMMIT;

EXECUTE PROCEDURE EST_SALDO_RETAG_PA.EST_SALDO_ATUAL_DTH_GAR;

DROP PACKAGE EST_SALDO_RETAG_PA;
DROP TABLE EST_SALDO_ATUAL_DTH;
DROP TABLE EST_SALDO_ATUAL;
DROP TABLE EST_SALDO_HIST_DT;
DROP TABLE EST_SALDO_HIST;
DELETE FROM DBUPDATE_HIST WHERE NUM>=122;
COMMIT;

*/

SET TERM ^;
CREATE OR ALTER PACKAGE EST_SALDO_RETAG_PA
AS
BEGIN
  FUNCTION DT_HIST_ULTIMA_GET RETURNS DATE;
  FUNCTION EST_MOV_DTH_MIN_GET RETURNS TIMESTAMP;
  FUNCTION PROD_QTD_GET RETURNS INTEGER;

  PROCEDURE PROD_LISTA_GET
  RETURNS 
  (
    PROD_ID INTEGER
  );

  PROCEDURE EST_MOV_ITEM_LISTA_GET
  (
    DTH_INI TIMESTAMP,
    DTH_FIN TIMESTAMP
  )
  RETURNS 
  (
    PROD_ID INTEGER,
    EST_MOV_TIPO_ID ID_CHAR_DOM,
    QTD QTD_DOM
  );

  PROCEDURE EST_SALDO_ATUAL_DTH_GAR;
END^

----- body -----

RECREATE PACKAGE BODY EST_SALDO_RETAG_PA
AS
BEGIN
  FUNCTION DT_HIST_ULTIMA_GET RETURNS DATE
  AS
    DECLARE VARIABLE DT_ATU DATE;
  BEGIN
    SELECT MAX(DT)
    FROM EST_SALDO_HIST_DT
    INTO :DT_ATU;
    RETURN COALESCE(:DT_ATU, '1900-01-01');
  END

  FUNCTION EST_MOV_DTH_MIN_GET RETURNS TIMESTAMP
  AS
    DECLARE VARIABLE DTH_MIN_RET TIMESTAMP;
  BEGIN
    SELECT MIN(CRIADO_EM)
    FROM EST_MOV
    INTO :DTH_MIN_RET;

    RETURN COALESCE(:DTH_MIN_RET, '1900-01-01');
  END

  FUNCTION PROD_QTD_GET RETURNS INTEGER
  AS
    DECLARE VARIABLE QTD_RET INTEGER;
  BEGIN
    SELECT COUNT(PROD_ID)
    FROM PROD
    WHERE PROD_NATU_ID IN (ASCII_CHAR(33), ASCII_CHAR(35), ASCII_CHAR(37))
    INTO :QTD_RET;

    RETURN COALESCE(:QTD_RET, 0);
  END


  PROCEDURE PROD_LISTA_GET
  RETURNS 
  (
    PROD_ID INTEGER
  )
  AS
  BEGIN
    FOR SELECT PROD_ID
        FROM PROD
        WHERE PROD_NATU_ID IN (ASCII_CHAR(33), ASCII_CHAR(35), ASCII_CHAR(37))
        ORDER BY PROD_ID
        INTO :PROD_ID
    DO
      SUSPEND;
  END

  PROCEDURE EST_MOV_ITEM_LISTA_GET
  (
    DTH_INI TIMESTAMP,
    DTH_FIN TIMESTAMP
  )
  RETURNS 
  (
    PROD_ID INTEGER,
    EST_MOV_TIPO_ID ID_CHAR_DOM,
    QTD QTD_DOM
  )
  AS
  BEGIN
    FOR
      WITH E AS
      ( 
      SELECT
      LOJA_ID
      , TERMINAL_ID
      , EST_MOV_ID
      , EST_MOV_TIPO_ID
      , FINALIZADO_EM
      FROM EST_MOV
      WHERE FINALIZADO
      AND NOT CANCELADO
      AND FINALIZADO_EM >= :DTH_INI
      AND FINALIZADO_EM < :DTH_FIN 
      ), I AS (
      SELECT 
      LOJA_ID
      , TERMINAL_ID
      , EST_MOV_ID
      , ORDEM
      , PROD_ID
      , QTD
      FROM EST_MOV_ITEM
      WHERE NOT CANCELADO
      )
      SELECT 
      I.PROD_ID
      , E.EST_MOV_TIPO_ID
      , I.QTD
      FROM E
      JOIN I ON
      E.LOJA_ID = I.LOJA_ID
      AND E.TERMINAL_ID = I.TERMINAL_ID
      AND E.EST_MOV_ID = I.EST_MOV_ID
      ORDER BY E.FINALIZADO_EM, I.ORDEM
    INTO :PROD_ID, :EST_MOV_TIPO_ID, :QTD
    DO
      SUSPEND;  
  END

  PROCEDURE EST_SALDO_ATUAL_DTH_GAR
  AS
  BEGIN
    IF (NOT EXISTS (SELECT 1 FROM EST_SALDO_ATUAL_DTH)) THEN
    BEGIN
      INSERT INTO EST_SALDO_ATUAL_DTH (EST_SALDO_ATUAL_DTH_ID, DTH)
      VALUES (1, '1900-01-01 00:00:00');
    END  
  END

END^
SET TERM ;^
