/*
ctrl+h
{ DATA_ZERADA} '1.1.1900'
DROP PACKAGE VENDA_PDV_INS_PA;

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\VENDA_PDV_INS_PA.sql";

SELECT PROD_ID, DESCR_RED, ENCONTRADO, MENSAGEM FROM VENDA_PDV_INS_PA.STR_BUSCA_TO_PROD('2')

 PROD_ID, DESCR_RED, ENCONTRADO, MENSAGEM FROM VENDA_PDV_INS_PA.STR_BUSCA_TO_PROD('8617627500060');
SELECT * FROM VENDA_PDV_INS_PA.STR_BUSCA_TO_PROD('8617627500060');


PROCEDURE STR_BUSCA_TO_PROD
  (
    STR_BUSCA VARCHAR(30)
  )
  RETURNS
  (
    PROD_ID ID_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , UNID_SIGLA CHAR(6)
    , BALANCA_EXIGE BOOLEAN
    , CUSTO_UNIT CUSTO_DOM
    , PRECO_UNIT_ORIGINAL PRECO_DOM
    , PRECO_UNIT_PROMO PRECO_DOM
    , PRECO_UNIT PRECO_DOM
    , ENCONTRADO BOOLEAN
    , MENSAGEM VARCHAR(30)
  )
  


*/

SET TERM ^;
CREATE OR ALTER PACKAGE VENDA_PDV_INS_PA
AS
BEGIN
  PROCEDURE VENDA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    VENDA_ID_RET ID_DOM
  );

  PROCEDURE VENDA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    , VENDA_ID ID_DOM NOT NULL
    
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    
    , CUSTO_UNIT NUMERIC(12, 4) NOT NULL
    , CUSTO NUMERIC(12,2) NOT NULL
    
    , PRECO_UNIT_ORIGINAL NUMERIC(12, 2) NOT NULL
    , PRECO_UNIT_PROMO NUMERIC(12, 2) NOT NULL
    , PRECO_UNIT NUMERIC(12, 2) NOT NULL
    , PRECO_BRUTO NUMERIC(12, 2) NOT NULL
    
    , DESCONTO NUMERIC(12, 2) NOT NULL
    , PRECO NUMERIC(12, 2) NOT NULL
    , LOG_STR VARCHAR(200) NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , VENDA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  );

  PROCEDURE BY_PROD_ID
  (
    PROD_ID ID_DOM
  )
  RETURNS
  (
    PROD_ID_RET ID_DOM,
    DESCR_RED PROD_DESCR_RED_DOM,
    FABR_NOME NOME_REDU_DOM,
    UNID_SIGLA CHAR(6),
    BALANCA_EXIGE BOOLEAN,
    CUSTO_UNIT CUSTO_DOM,
    PRECO_UNIT PRECO_DOM,
    ENCONTRADO BOOLEAN,
    MENSAGEM VARCHAR(30)
  );

  PROCEDURE BY_BARRAS
  (
    STR_BUSCA VARCHAR(30)
  )
  RETURNS
  (
    PROD_ID_RET ID_DOM,
    DESCR_RED PROD_DESCR_RED_DOM,
    FABR_NOME NOME_REDU_DOM,
    UNID_SIGLA CHAR(6),
    BALANCA_EXIGE BOOLEAN,
    CUSTO_UNIT CUSTO_DOM,
    PRECO_UNIT PRECO_DOM,
    ENCONTRADO BOOLEAN,
    MENSAGEM VARCHAR(30)
  );
  
  PROCEDURE ITEM_PEGUE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM NOT NULL
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , CUSTO_UNIT NUMERIC(12, 4) NOT NULL
    , CUSTO CUSTO_DOM NOT NULL
    , PRECO_UNIT_ORIGINAL PRECO_DOM NOT NULL
    , PRECO_UNIT_PROMO PRECO_DOM NOT NULL
    , PRECO_UNIT PRECO_DOM NOT NULL
    , PRECO_BRUTO DINH_DOM NOT NULL
    , DESCONTO DINH_DOM NOT NULL
    , PRECO DINH_DOM
    , LOG_STR VARCHAR(200)
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , VENDA_ID_RET ID_DOM
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , ORDEM_RET SMALLINT
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    , MENSAGEM VARCHAR(30)
    , LOG_STR_RET VARCHAR(200)
  );

  PROCEDURE STR_BUSCA_TO_PROD
  (
    STR_BUSCA VARCHAR(30)
  )
  RETURNS
  (
    PROD_ID ID_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , UNID_SIGLA CHAR(6)
    , BALANCA_EXIGE BOOLEAN
    , CUSTO_UNIT CUSTO_DOM
    , PRECO_UNIT_ORIGINAL PRECO_DOM
    , PRECO_UNIT_PROMO PRECO_DOM
    , PRECO_UNIT PRECO_DOM
    , ENCONTRADO BOOLEAN
    , MENSAGEM VARCHAR(30)
  );  

  PROCEDURE ITEM_BUSQUE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM NOT NULL
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , STR_BUSCA VARCHAR(30)
    , BALANCA_HABILITADA BOOLEAN
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , VENDA_ID_RET ID_DOM
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , ORDEM_RET SMALLINT
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    , PROD_ID ID_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , UNID_SIGLA CHAR(6)
    , BALANCA_EXIGE BOOLEAN
    , CUSTO_UNIT CUSTO_DOM
    , CUSTO CUSTO_DOM
    , PRECO_UNIT_ORIGINAL PRECO_DOM
    , PRECO_UNIT_PROMO PRECO_DOM
    , PRECO_UNIT PRECO_DOM
    , PRECO_BRUTO DINH_DOM
    , ENCONTRADO BOOLEAN
    , MENSAGEM VARCHAR(30)
    , LOG_STR_RET VARCHAR(200)
  );

    PROCEDURE PENDENTE_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )  
  RETURNS
  (
    HAVIA_PENDENTE BOOLEAN
    
    , TERMINAL_ID ID_SHORT_DOM
    , EST_MOV_ID BIGINT  
    
    , EST_MOV_TIPO_ID ID_CHAR_DOM 
    , DTH_DOC TIMESTAMP 
    
    , FINALIZADO BOOLEAN 
    , CANCELADO BOOLEAN 
    
    , CRIADO_EM TIMESTAMP 
    , EST_MOV_ALTERADO_EM TIMESTAMP
    , FINALIZADO_EM TIMESTAMP
    , CANCELADO_EM TIMESTAMP
    
    , VENDA_ID ID_DOM 
    , C VARCHAR(15) 
    
    , CLIENTE_LOJA_ID ID_SHORT_DOM 
    , CLIENTE_TERMINAL_ID ID_SHORT_DOM 
    , CLIENTE_ID ID_DOM 
    
    , ENDERECO_LOJA_ID ID_SHORT_DOM 
    , ENDERECO_TERMINAL_ID ID_SHORT_DOM 
    , ENDERECO_ID ID_DOM 
    
    , DESCONTO_TOTAL NUMERIC(12, 2) 
    , CUSTO_TOTAL NUMERIC(12, 2) 
    , TOTAL_LIQUIDO NUMERIC(12, 2) 
    
    , ENTREGA_TEM BOOLEAN 
    , ENTREGADOR_PESSOA_ID ID_DOM 
    , ENTREGA_EM TIMESTAMP 
    , VENDA_ALTERADO_EM TIMESTAMP 
  );

  PROCEDURE CANCELAR_EST_MOV_ITEM
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL,
    ORDEM SMALLINT NOT NULL
  )  
  RETURNS
  (
    CANCELADO_EM_RET TIMESTAMP
  );

  PROCEDURE VENDA_TOTAIS_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL
  )
  RETURNS
  (
    DESCONTO_TOTAL_RET NUMERIC(12, 2),
    CUSTO_TOTAL_RET NUMERIC(12, 2),
    TOTAL_LIQUIDO_RET NUMERIC(12, 2)
  );

  PROCEDURE FINALIZE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL
  )
  RETURNS
  (
    FINALIZADO_EM_RET TIMESTAMP
    , DESCONTO_TOTAL_RET NUMERIC(12, 2)
    , CUSTO_TOTAL_RET NUMERIC(12, 2)
    , TOTAL_LIQUIDO_RET NUMERIC(12, 2)
  );
END^

---- BODY

RECREATE PACKAGE BODY VENDA_PDV_INS_PA
AS
BEGIN
  PROCEDURE VENDA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    VENDA_ID_RET ID_DOM
  )
  AS
  BEGIN
    :VENDA_ID_RET = COALESCE(:VENDA_ID, 0);
    IF (:VENDA_ID_RET = 0) THEN
    BEGIN
      :VENDA_ID_RET = NEXT VALUE FOR VENDA_SEQ;
      INSERT INTO VENDA
      (
        LOJA_ID
        , TERMINAL_ID
        , EST_MOV_ID
        , VENDA_ID
        , SESS_LOJA_ID
        , SESS_TERMINAL_ID
        , SESS_ID
      )
      VALUES
      (
        :LOJA_ID
        , :TERMINAL_ID
        , :EST_MOV_ID
        , :VENDA_ID_RET
        , :SESS_LOJA_ID
        , :SESS_TERMINAL_ID
        , :SESS_ID
      );
    END
    SUSPEND;
  END
  
  PROCEDURE VENDA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    , VENDA_ID ID_DOM NOT NULL
    
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    
    , CUSTO_UNIT NUMERIC(12, 4) NOT NULL
    , CUSTO NUMERIC(12,2) NOT NULL
    
    , PRECO_UNIT_ORIGINAL NUMERIC(12, 2) NOT NULL
    , PRECO_UNIT_PROMO NUMERIC(12, 2) NOT NULL
    , PRECO_UNIT NUMERIC(12, 2) NOT NULL
    , PRECO_BRUTO NUMERIC(12, 2) NOT NULL
    
    , DESCONTO NUMERIC(12, 2) NOT NULL
    , PRECO NUMERIC(12, 2) NOT NULL
    , LOG_STR VARCHAR(200) NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , VENDA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  )
  AS
  BEGIN
    LOG_STR_RET = LOG_STR;
    SELECT EST_MOV_ID_RET, DTH_DOC_RET, EST_MOV_CRIADO_EM_RET, EST_MOV_ITEM_CRIADO_EM_RET, ORDEM_RET
    FROM EST_MOV_MANUT_PA.EST_MOV_ITEM_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID
      , '"' -- EST_MOV_TIPO_ID #34 VENDA
      , '1.1.1900' -- EST_MOV_DTH_DOC
      , '1.1.1900' -- EST_MOV_CRIADO_EM
      , :PROD_ID
      , :QTD
    )
    INTO :EST_MOV_ID_RET, :DTH_DOC_RET, :EST_MOV_CRIADO_EM_RET, :EST_MOV_ITEM_CRIADO_EM_RET, :ORDEM_RET;
    
    
    :LOG_STR_RET = :LOG_STR_RET ||';EST_MOV_ID_RET='||:EST_MOV_ID_RET;
    :LOG_STR_RET = :LOG_STR_RET ||';ORDEM_RET='||:ORDEM_RET;
    SELECT VENDA_ID_RET FROM VENDA_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :VENDA_ID
      , :SESS_LOJA_ID
      , :SESS_TERMINAL_ID
      , :SESS_ID
    )
    INTO :VENDA_ID_RET;
    :LOG_STR_RET = :LOG_STR_RET ||';VENDA_ID_RET='||:VENDA_ID_RET;
    INSERT INTO VENDA_ITEM
    (
      LOJA_ID
      , TERMINAL_ID
      , EST_MOV_ID
      , ORDEM
      , CUSTO_UNIT
      , CUSTO
      , PRECO_UNIT_ORIGINAL
      , PRECO_UNIT_PROMO
      , PRECO_UNIT
      , PRECO_BRUTO
      , DESCONTO
      , PRECO
    )
    VALUES
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :ORDEM_RET
      , :CUSTO_UNIT
      , :CUSTO
      , :PRECO_UNIT_ORIGINAL
      , :PRECO_UNIT_PROMO
      , :PRECO_UNIT
      , :PRECO_BRUTO
      , :DESCONTO
      , :PRECO
    );
    SUSPEND;
  END

  PROCEDURE BY_PROD_ID
  (
    PROD_ID ID_DOM
  )
  RETURNS
  (
    PROD_ID_RET ID_DOM,
    DESCR_RED PROD_DESCR_RED_DOM,
    FABR_NOME NOME_REDU_DOM,
    UNID_SIGLA CHAR(6),
    BALANCA_EXIGE BOOLEAN,
    CUSTO_UNIT CUSTO_DOM,
    PRECO_UNIT PRECO_DOM,
    ENCONTRADO BOOLEAN,
    MENSAGEM VARCHAR(30)
  )
  AS
  BEGIN
    SELECT
      P.PROD_ID,
      P.DESCR_RED,
      P.FABR_NOME,
      P.UNID_SIGLA,
      P.BALANCA_EXIGE,
      P.CUSTO,
      P.PRECO,
      TRUE AS ENCONTRADO,
      'CODIGO ENCONTRADO' AS MENSAGEM
    FROM
      PROD P
    WHERE
      P.PROD_ID = :PROD_ID
      AND (NOT P.DE_SISTEMA) AND P.ATIVO
    INTO
      :PROD_ID_RET,
      :DESCR_RED,
      :FABR_NOME,
      :UNID_SIGLA,
      :BALANCA_EXIGE,
      :CUSTO_UNIT,
      :PRECO_UNIT,
      :ENCONTRADO,
      :MENSAGEM
      ;
    IF (ROW_COUNT = 0) THEN
    BEGIN
        :ENCONTRADO = FALSE;
        :MENSAGEM = 'CODIGO NAO ENCONTRADO';
    END
    SUSPEND;
  END
  
  PROCEDURE BY_BARRAS
  (
    STR_BUSCA VARCHAR(30)
  )
  RETURNS
  (
    PROD_ID_RET ID_DOM,
    DESCR_RED PROD_DESCR_RED_DOM,
    FABR_NOME NOME_REDU_DOM,
    UNID_SIGLA CHAR(6),
    BALANCA_EXIGE BOOLEAN,
    CUSTO_UNIT CUSTO_DOM,
    PRECO_UNIT PRECO_DOM,
    ENCONTRADO BOOLEAN,
    MENSAGEM VARCHAR(30)
  )
  AS
  BEGIN
    SELECT
      P.PROD_ID,
      P.DESCR_RED,
      P.FABR_NOME,
      P.UNID_SIGLA,
      P.BALANCA_EXIGE,
      P.CUSTO,
      P.PRECO,
      TRUE AS ENCONTRADO,
      'CODIGO ENCONTRADO' AS MENSAGEM
    FROM
      PROD P
    JOIN
      PROD_BARRAS PB ON P.PROD_ID = PB.PROD_ID
    WHERE
      PB.COD_BARRAS = :STR_BUSCA
      AND (NOT P.DE_SISTEMA) AND P.ATIVO
    INTO
      :PROD_ID_RET,
      :DESCR_RED,
      :FABR_NOME,
      :UNID_SIGLA,
      :BALANCA_EXIGE,
      :CUSTO_UNIT,
      :PRECO_UNIT,
      :ENCONTRADO,
      :MENSAGEM
      ;
    IF (ROW_COUNT = 0) THEN
    BEGIN
        ENCONTRADO = FALSE;
        MENSAGEM = 'CODIGO NAO ENCONTRADO';
    END
    SUSPEND;
  END

  PROCEDURE ITEM_PEGUE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM NOT NULL
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , CUSTO_UNIT NUMERIC(12, 4) NOT NULL
    , CUSTO CUSTO_DOM NOT NULL
    , PRECO_UNIT_ORIGINAL PRECO_DOM NOT NULL
    , PRECO_UNIT_PROMO PRECO_DOM NOT NULL
    , PRECO_UNIT PRECO_DOM NOT NULL
    , PRECO_BRUTO DINH_DOM NOT NULL
    , DESCONTO DINH_DOM NOT NULL
    , PRECO DINH_DOM
    , LOG_STR VARCHAR(200)
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , VENDA_ID_RET ID_DOM
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , ORDEM_RET SMALLINT
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    , MENSAGEM VARCHAR(30)
    , LOG_STR_RET VARCHAR(200)
  )
  AS
  BEGIN
    :LOG_STR_RET = :LOG_STR || ';VAI VENDA_ITEM_INS';
    SELECT
      EST_MOV_ID_RET, DTH_DOC_RET, EST_MOV_CRIADO_EM_RET, EST_MOV_ITEM_CRIADO_EM_RET
      , VENDA_ID_RET, ORDEM_RET, LOG_STR_RET
    FROM
      VENDA_ITEM_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID
      , :VENDA_ID
      , :SESS_LOJA_ID
      , :SESS_TERMINAL_ID
      , :SESS_ID
      , :PROD_ID
      , :QTD
      , :CUSTO_UNIT
      , :CUSTO
      , :PRECO_UNIT_ORIGINAL
      , :PRECO_UNIT_PROMO
      , :PRECO_UNIT
      , :PRECO_BRUTO
      , :DESCONTO
      , :PRECO
      , :LOG_STR
    )
    INTO 
      :EST_MOV_ID_RET
      , :DTH_DOC_RET
      , :EST_MOV_CRIADO_EM_RET
      , :EST_MOV_ITEM_CRIADO_EM_RET
      , :VENDA_ID_RET
      , :ORDEM_RET
      , :LOG_STR_RET
      ;      
    SUSPEND;
  END   
  
  PROCEDURE STR_BUSCA_TO_PROD
  (
    STR_BUSCA VARCHAR(30)
  )
  RETURNS
  (
    PROD_ID ID_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , UNID_SIGLA CHAR(6)
    , BALANCA_EXIGE BOOLEAN
    , CUSTO_UNIT CUSTO_DOM
    , PRECO_UNIT_ORIGINAL PRECO_DOM
    , PRECO_UNIT_PROMO PRECO_DOM
    , PRECO_UNIT PRECO_DOM
    , ENCONTRADO BOOLEAN
    , MENSAGEM VARCHAR(30)
  )
  AS
  BEGIN
    IF (CHARACTER_LENGTH (:STR_BUSCA) < 8) THEN
    BEGIN
      SELECT PROD_ID_RET, DESCR_RED, FABR_NOME, UNID_SIGLA, BALANCA_EXIGE,
        CUSTO_UNIT, PRECO_UNIT, ENCONTRADO, MENSAGEM
      FROM BY_PROD_ID(CAST(:STR_BUSCA AS ID_DOM))
      INTO :PROD_ID, :DESCR_RED, :FABR_NOME, :UNID_SIGLA, :BALANCA_EXIGE,
        :CUSTO_UNIT, :PRECO_UNIT, :ENCONTRADO, :MENSAGEM;
    END
    ELSE
    BEGIN
      SELECT PROD_ID_RET, DESCR_RED, FABR_NOME, UNID_SIGLA, BALANCA_EXIGE,
        CUSTO_UNIT, PRECO_UNIT, ENCONTRADO, MENSAGEM
      FROM BY_BARRAS(:STR_BUSCA)
      INTO PROD_ID, :DESCR_RED, :FABR_NOME, :UNID_SIGLA, :BALANCA_EXIGE,
        :CUSTO_UNIT, :PRECO_UNIT, :ENCONTRADO, :MENSAGEM;
    END

    :PRECO_UNIT_ORIGINAL = :PRECO_UNIT;
    :PRECO_UNIT_PROMO = 0;

    SUSPEND;
  END

  PROCEDURE ITEM_BUSQUE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , VENDA_ID ID_DOM NOT NULL
    , SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , STR_BUSCA VARCHAR(30)
    , BALANCA_HABILITADA BOOLEAN
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , VENDA_ID_RET ID_DOM
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , ORDEM_RET SMALLINT
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    , PROD_ID ID_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , UNID_SIGLA CHAR(6)
    , BALANCA_EXIGE BOOLEAN
    , CUSTO_UNIT CUSTO_DOM
    , CUSTO CUSTO_DOM
    , PRECO_UNIT_ORIGINAL PRECO_DOM
    , PRECO_UNIT_PROMO PRECO_DOM
    , PRECO_UNIT PRECO_DOM
    , PRECO_BRUTO DINH_DOM
    , ENCONTRADO BOOLEAN
    , MENSAGEM VARCHAR(30)
    , LOG_STR_RET VARCHAR(200)
  )
  AS
    DECLARE PRECO NUMERIC(12, 2);
    DECLARE DESCONTO NUMERIC(12, 2);
    DECLARE BALANCA_PRECISA BOOLEAN;
  BEGIN
    IF (CHARACTER_LENGTH (:STR_BUSCA) < 8) THEN
    BEGIN
      SELECT PROD_ID_RET, DESCR_RED, FABR_NOME, UNID_SIGLA, BALANCA_EXIGE,
        CUSTO_UNIT, PRECO_UNIT, ENCONTRADO, MENSAGEM
      FROM BY_PROD_ID(CAST(:STR_BUSCA AS ID_DOM))
      INTO :PROD_ID, :DESCR_RED, :FABR_NOME, :UNID_SIGLA, :BALANCA_EXIGE,
        :CUSTO_UNIT, :PRECO_UNIT, :ENCONTRADO, :MENSAGEM;
    END
    ELSE
    BEGIN
      SELECT PROD_ID_RET, DESCR_RED, FABR_NOME, UNID_SIGLA, BALANCA_EXIGE,
        CUSTO_UNIT, PRECO_UNIT, ENCONTRADO, MENSAGEM
      FROM BY_BARRAS(:STR_BUSCA)
      INTO PROD_ID, :DESCR_RED, :FABR_NOME, :UNID_SIGLA, :BALANCA_EXIGE,
        :CUSTO_UNIT, :PRECO_UNIT, :ENCONTRADO, :MENSAGEM;
    END

    LOG_STR_RET = 'PROD_ID=' || CAST(PROD_ID AS VARCHAR(7));

    IF (NOT :ENCONTRADO) THEN
    BEGIN
      SUSPEND;
      EXIT;
    END

    :PRECO_UNIT_ORIGINAL = :PRECO_UNIT;
    :PRECO_UNIT_PROMO = 0;

    :BALANCA_PRECISA = :BALANCA_EXIGE AND :BALANCA_HABILITADA;

    IF (NOT :BALANCA_PRECISA) THEN
    BEGIN
      :CUSTO = ROUND(:CUSTO_UNIT * :QTD, 2);
      :PRECO_BRUTO = ROUND(:PRECO_UNIT * :QTD, 2);
      :DESCONTO = 0;
      :PRECO = :PRECO_BRUTO - :DESCONTO;
      :LOG_STR_RET = :LOG_STR_RET || ';VAI ITEM_PEGUE';
      
      SELECT
        EST_MOV_ID_RET
        , ORDEM_RET
        , VENDA_ID_RET
        , DTH_DOC_RET
        , EST_MOV_CRIADO_EM_RET
        , EST_MOV_ITEM_CRIADO_EM_RET
        , MENSAGEM
        , LOG_STR_RET
      FROM 
        ITEM_PEGUE
        (
        :LOJA_ID
        , :TERMINAL_ID
        , :EST_MOV_ID
        , :VENDA_ID
        , :SESS_LOJA_ID
        , :SESS_TERMINAL_ID
        , :SESS_ID
        , :PROD_ID
        , :QTD
        , :CUSTO_UNIT
        , :CUSTO
        , :PRECO_UNIT_ORIGINAL
        , :PRECO_UNIT_PROMO
        , :PRECO_UNIT
        , :PRECO_BRUTO
        , :DESCONTO
        , :PRECO
        , :LOG_STR_RET
      )
      INTO
        :EST_MOV_ID_RET
        , :ORDEM_RET
        , :VENDA_ID_RET
        , :DTH_DOC_RET
        , :EST_MOV_CRIADO_EM_RET
        , :EST_MOV_ITEM_CRIADO_EM_RET
        , :MENSAGEM
        , LOG_STR_RET
        ;
    END
    SUSPEND;
  END

  PROCEDURE PENDENTE_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )  
  RETURNS
  (
    HAVIA_PENDENTE BOOLEAN
    
    , TERMINAL_ID ID_SHORT_DOM
    , EST_MOV_ID BIGINT  
    
    , EST_MOV_TIPO_ID ID_CHAR_DOM 
    , DTH_DOC TIMESTAMP 
    
    , FINALIZADO BOOLEAN 
    , CANCELADO BOOLEAN 
    
    , CRIADO_EM TIMESTAMP 
    , EST_MOV_ALTERADO_EM TIMESTAMP
    , FINALIZADO_EM TIMESTAMP
    , CANCELADO_EM TIMESTAMP
    
    , VENDA_ID ID_DOM 
    , C VARCHAR(15) 
    
    , CLIENTE_LOJA_ID ID_SHORT_DOM 
    , CLIENTE_TERMINAL_ID ID_SHORT_DOM 
    , CLIENTE_ID ID_DOM 
    
    , ENDERECO_LOJA_ID ID_SHORT_DOM 
    , ENDERECO_TERMINAL_ID ID_SHORT_DOM 
    , ENDERECO_ID ID_DOM 
    
    , DESCONTO_TOTAL NUMERIC(12, 2) 
    , CUSTO_TOTAL NUMERIC(12, 2) 
    , TOTAL_LIQUIDO NUMERIC(12, 2) 
    
    , ENTREGA_TEM BOOLEAN 
    , ENTREGADOR_PESSOA_ID ID_DOM 
    , ENTREGA_EM TIMESTAMP 
    , VENDA_ALTERADO_EM TIMESTAMP 
  )
  AS
    DECLARE LOJA_ID ID_DOM;
  BEGIN
    SELECT 
      FIRST(1)
      EM.LOJA_ID
      , EM.TERMINAL_ID
      , EM.EST_MOV_ID
      
      , EM.EST_MOV_TIPO_ID
      , EM.DTH_DOC
      
      , EM.FINALIZADO
      , EM.CANCELADO
      
      , EM.CRIADO_EM
      , EM.ALTERADO_EM 
      , EM.FINALIZADO_EM
      , EM.CANCELADO_EM
      
      , VE.VENDA_ID
      , VE.C
      
      , VE.CLIENTE_LOJA_ID
      , VE.CLIENTE_TERMINAL_ID
      , VE.CLIENTE_ID
      
      , VE.ENDERECO_LOJA_ID
      , VE.ENDERECO_TERMINAL_ID
      , VE.ENDERECO_ID
      
      , VE.DESCONTO_TOTAL
      , VE.CUSTO_TOTAL
      , VE.TOTAL_LIQUIDO
      
      , VE.ENTREGA_TEM
      , VE.ENTREGADOR_PESSOA_ID
      , VE.ENTREGA_EM
      , VE.ALTERADO_EM

    FROM EST_MOV EM

    JOIN VENDA VE ON
      EM.LOJA_ID = VE.LOJA_ID
      AND EM.TERMINAL_ID = VE.TERMINAL_ID
      AND EM.EST_MOV_ID = VE.EST_MOV_ID

    JOIN AMBIENTE_SIS AMBI ON
      AMBI.LOJA_ID = EM.LOJA_ID
      
    WHERE 
      (NOT EM.FINALIZADO) 
      AND (NOT EM.CANCELADO) 
      AND EM.EST_MOV_TIPO_ID = '"'
    INTO
      :LOJA_ID 
      , :TERMINAL_ID
      , :EST_MOV_ID
      
      , :EST_MOV_TIPO_ID
      , :DTH_DOC
      
      , :FINALIZADO
      , :CANCELADO
      
      , :CRIADO_EM
      , :EST_MOV_ALTERADO_EM
      , :FINALIZADO_EM
      , :CANCELADO_EM
      
      , :VENDA_ID
      , :C
      
      , :CLIENTE_LOJA_ID
      , :CLIENTE_TERMINAL_ID
      , :CLIENTE_ID
      
      , :ENDERECO_LOJA_ID
      , :ENDERECO_TERMINAL_ID
      , :ENDERECO_ID
      
      , :DESCONTO_TOTAL
      , :CUSTO_TOTAL
      , :TOTAL_LIQUIDO
      
      , :ENTREGA_TEM
      , :ENTREGADOR_PESSOA_ID
      , :ENTREGA_EM
      , :VENDA_ALTERADO_EM
    ;

    HAVIA_PENDENTE = (ROW_COUNT > 0);

    IF (HAVIA_PENDENTE) THEN
    BEGIN
      UPDATE VENDA SET
        SESS_LOJA_ID = :SESS_LOJA_ID
        , SESS_TERMINAL_ID = :SESS_TERMINAL_ID
        , SESS_ID = :SESS_ID
        , ALTERADO_EM = CURRENT_TIMESTAMP
      WHERE 
        LOJA_ID = :LOJA_ID
        AND TERMINAL_ID = :TERMINAL_ID
        AND EST_MOV_ID = :EST_MOV_ID
        AND 
        (
          (SESS_LOJA_ID <> :SESS_LOJA_ID)
          OR (SESS_TERMINAL_ID <> :SESS_TERMINAL_ID)
          OR (SESS_ID <> :SESS_ID)
        )
        ;
    END

    SUSPEND;
  END

  PROCEDURE CANCELAR_EST_MOV_ITEM
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL,
    ORDEM SMALLINT NOT NULL
  )  
  RETURNS
  (
    CANCELADO_EM_RET TIMESTAMP
  )
  AS
  BEGIN
    :CANCELADO_EM_RET = CURRENT_TIMESTAMP;

    UPDATE EST_MOV_ITEM
    SET CANCELADO = TRUE,
        CANCELADO_EM = :CANCELADO_EM_RET
        , ALTERADO_EM = :CANCELADO_EM_RET
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID
      AND ORDEM = :ORDEM;

    UPDATE EST_MOV
    SET ALTERADO_EM = :CANCELADO_EM_RET
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID;

    UPDATE VENDA
    SET ALTERADO_EM = :CANCELADO_EM_RET
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID;

    SUSPEND;
  END

  PROCEDURE VENDA_TOTAIS_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL
  )
  RETURNS
  (
    DESCONTO_TOTAL_RET NUMERIC(12, 2),
    CUSTO_TOTAL_RET NUMERIC(12, 2),
    TOTAL_LIQUIDO_RET NUMERIC(12, 2)
  )
  AS
  BEGIN
    SELECT
      SUM(VI.DESCONTO),
      SUM(VI.CUSTO),
      SUM(VI.PRECO)
    FROM
      VENDA_ITEM VI
    JOIN
      EST_MOV_ITEM EMI ON VI.LOJA_ID = EMI.LOJA_ID
      AND VI.TERMINAL_ID = EMI.TERMINAL_ID
      AND VI.EST_MOV_ID = EMI.EST_MOV_ID
      AND VI.ORDEM = EMI.ORDEM
    WHERE
      VI.LOJA_ID = :LOJA_ID
      AND VI.TERMINAL_ID = :TERMINAL_ID
      AND VI.EST_MOV_ID = :EST_MOV_ID
      AND NOT EMI.CANCELADO
    INTO
      :DESCONTO_TOTAL_RET,
      :CUSTO_TOTAL_RET,
      :TOTAL_LIQUIDO_RET;
    SUSPEND;
  END

  PROCEDURE FINALIZE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    EST_MOV_ID BIGINT NOT NULL
  )
  RETURNS
  (
    FINALIZADO_EM_RET TIMESTAMP
    , DESCONTO_TOTAL_RET NUMERIC(12, 2)
    , CUSTO_TOTAL_RET NUMERIC(12, 2)
    , TOTAL_LIQUIDO_RET NUMERIC(12, 2)
  )
  AS
  BEGIN
    SELECT FINALIZADO_EM_RET
    FROM EST_MOV_MANUT_PA.FINALIZE
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :EST_MOV_ID
    )
    INTO :FINALIZADO_EM_RET;

    SELECT
      DESCONTO_TOTAL_RET,
      CUSTO_TOTAL_RET,
      TOTAL_LIQUIDO_RET
    FROM VENDA_TOTAIS_GET
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :EST_MOV_ID
    )
    INTO
      :DESCONTO_TOTAL_RET,
      :CUSTO_TOTAL_RET,
      :TOTAL_LIQUIDO_RET;

    UPDATE VENDA SET
      DESCONTO_TOTAL = :DESCONTO_TOTAL_RET,
      CUSTO_TOTAL = :CUSTO_TOTAL_RET,
      TOTAL_LIQUIDO = :TOTAL_LIQUIDO_RET,
      ALTERADO_EM = :FINALIZADO_EM_RET
    WHERE
      LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID;

    SUSPEND;
  END
END^
SET TERM ;^
