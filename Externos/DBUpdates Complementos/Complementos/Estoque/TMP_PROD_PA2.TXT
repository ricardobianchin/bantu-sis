/*
in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\TMP_PROD_PA2.sql";

EU TENTEI CRIAR UMA STORED PROCEDURE NO FIREBIRD QUE RECEBESSE
- LOJA_ID CODIGO NUMERIDO DA LOJA. OS PRODUTOS PODEM SER DE MAIS UMA LOJA, POR ISTO A TABELA PROD_COMPL TEM LOJA_ID
- FILTRO_STR UMA STRING DE BUSCA
- BUSCA_COD: SE BUSCA_COD FOR TRUE, DEVE FILTRAR POR CODIGOS QUE SEJAM FILTRO_STR
- BUSCA_BARRAS: SE BUSCA_BARRAS FOR VERDADEIRO, FILTRO_STR CONTEM UM PEDAÇO DE CODIGO DE BARRA
- BUSCA_DESCR: SE BUSCA_DESCR FOR VERDADEIRO, FILTRO_STR CONTEM UM PEDAÇO DE DESCRICAO DE PRODUTO OU PEDACO DE DESCRICAO REDUZIDA
- BUSCA_FABR: SE BUSCA_FABR FOR VERDADEIRO, FILTRO_STR CONTEM UM PEDAÇO DE NOME DE FABRICANTE
- BUSCA_TIPO: SE BUSCA_TIPO FOR VERDADEIRO, FILTRO_STR CONTEM UM PEDAÇO DE NOME DE TIPO DE PRODUTO

O PROBLEMA É QUE SE EU BUSCAR POR
``` SQL
SELECT * FROM PROD_TMP_PA.LISTA_GET(1, 'CARREG', FALSE, FALSE, TRUE, FALSE, FALSE);
```
RETORNA SEMPRE TODOS OS REGISTROS

COMO RESOVER?
SE DESEJAR, GERE UM ARQUIVO PRA EU BAIXAR, OU GERE A RESPOSTA NA TELA...

*/


SET TERM ^;
CREATE OR ALTER PACKAGE PROD_TMP_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , FILTRO_STR VARCHAR(120)
    , BUSCA_COD BOOLEAN
    , BUSCA_BARRAS BOOLEAN
    , BUSCA_DESCR BOOLEAN
    , BUSCA_FABR BOOLEAN
    , BUSCA_TIPO BOOLEAN
  )
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , TIPO_DESCR NOME_REDU_DOM
    , COD_BARRAS VARCHAR(14)
  );
END^

RECREATE PACKAGE BODY PROD_TMP_PA
AS
BEGIN
  CREATE PROCEDURE LISTA_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , FILTRO_STR VARCHAR(120)
    , BUSCA_COD BOOLEAN
    , BUSCA_BARRAS BOOLEAN
    , BUSCA_DESCR BOOLEAN
    , BUSCA_FABR BOOLEAN
    , BUSCA_TIPO BOOLEAN
  )
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_NOME NOME_REDU_DOM
    , TIPO_DESCR NOME_REDU_DOM
    , COD_BARRAS VARCHAR(14)
  )
  AS 
  BEGIN 
    FOR
      WITH
      B AS ( -- BARRAS
        SELECT PROD_ID, COD_BARRAS, ORDEM
        FROM PROD_BARRAS
      ),
      P AS ( -- PROD
        SELECT PROD_ID, DESCR, DESCR_RED, FABR_ID, PROD_TIPO_ID, 
        UNID_ID, ICMS_ID, CAPAC_EMB, NCM
        FROM PROD
        WHERE 
        (
          (NOT :BUSCA_COD) 
          OR (PROD_ID = CAST(:FILTRO_STR AS ID_DOM))
          OR (:FILTRO_STR = '')
        )
        OR
        (
          (NOT :BUSCA_DESCR)
          OR (DESCR LIKE '%'||:FILTRO_STR||'%')
          OR (DESCR_RED LIKE '%'||:FILTRO_STR||'%')
        )
      ),
      CO AS ( -- PROD_COMPL
        SELECT PROD_ID, ATIVO, LOCALIZ, MARGEM, BALANCA_EXIGE,
        BAL_DPTO, BAL_VALIDADE_DIAS, BAL_TEXTO_ETIQ
        FROM PROD_COMPL
        WHERE LOJA_ID = :LOJA_ID
      ),
      CU AS (
        SELECT PROD_ID, CUSTO
        FROM PROD_CUSTO
        WHERE LOJA_ID = :LOJA_ID
      ),
      PR AS (
        SELECT PROD_ID, PRECO
        FROM PROD_PRECO
        WHERE LOJA_ID = :LOJA_ID
      ),
      F AS ( -- FABR
        SELECT ID_RET, DESCR_RET 
        FROM FABR_PA.LISTA_SELECT_GET
        WHERE (NOT :BUSCA_FABR)
        OR (DESCR_RET LIKE '%'||:FILTRO_STR||'%')
      ),
      T AS ( -- TIPO
        SELECT ID_RET, DESCR_RET 
        FROM PROD_TIPO_PA.LISTA_SELECT_GET
        WHERE (NOT :BUSCA_TIPO)
        OR (DESCR_RET LIKE '%'||:FILTRO_STR||'%')
      )
      ,
      U AS ( -- UNID
        SELECT ID_RET, DESCR_RET 
        FROM UNID_PA.LISTA_SELECT_GET
      ),
      I AS ( -- ICMS
        SELECT ID_RET, DESCR_RET 
        FROM ICMS_PA.LISTA_SELECT_GET
      )
      SELECT
      P.PROD_ID
      , P.DESCR
      , P.DESCR_RED
      , F.DESCR_RET FABR_NOME
      , T.DESCR_RET PROD_TIPO_DESCR
      , B.COD_BARRAS

      FROM P
      JOIN CO ON P.PROD_ID = CO.PROD_ID -- CO=COMPL PROD_COMPL
      LEFT JOIN B ON P.PROD_ID = B.PROD_ID -- B=BARRAS
      JOIN F ON F.ID_RET = P.FABR_ID -- F=FABR
      JOIN T ON T.ID_RET = P.PROD_TIPO_ID -- T=TIPO PROD_TIPO
      JOIN U ON U.ID_RET = P.UNID_ID -- U=UNID
      JOIN I ON I.ID_RET = P.ICMS_ID -- I=COMS
	    JOIN CU ON P.PROD_ID = CU.PROD_ID -- CU=CUSTO
	    JOIN PR ON P.PROD_ID = PR.PROD_ID -- PR=PRECO
      
      WHERE 
        ( -- BARRAS
        (NOT :BUSCA_BARRAS)
        OR (B.COD_BARRAS LIKE '%' || :FILTRO_STR || '%')
        )
      ORDER BY P.PROD_ID, B.ORDEM
    INTO
      :PROD_ID 
      , :DESCR 
      , :DESCR_RED 
      , :FABR_NOME 
      , :TIPO_DESCR 
      , :COD_BARRAS
    DO SUSPEND; 
  END
END^
SET TERM ;^
