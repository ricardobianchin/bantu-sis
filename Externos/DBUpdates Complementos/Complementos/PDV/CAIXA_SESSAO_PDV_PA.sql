SET TERM ^;
CREATE OR ALTER PACKAGE CAIXA_SESSAO_PDV_PA
AS
BEGIN
  PROCEDURE TEM_CAIXA_ABERTO
  RETURNS
  (  
    TEM BOOLEAN
  );
  
  PROCEDURE TEM_VENDA_NAO_FINALIZADA
  RETURNS
  (  
    TEM BOOLEAN
  );
  
  PROCEDURE FECHAR_PODE_GET
  RETURNS
  (
    PODE BOOLEAN
    , MENSAGEM_ID ID_DOM
  );
  
  PROCEDURE FECHAMENTO_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  );
END^

---- BODY

RECREATE PACKAGE BODY CAIXA_SESSAO_PDV_PA
AS
BEGIN
/*
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_CAIXA_ABERTO;
*/
  PROCEDURE TEM_CAIXA_ABERTO
  RETURNS
  (  
    TEM BOOLEAN
  )
  AS
    DECLARE RESULTADO INTEGER;
  BEGIN
    SELECT 1 FROM RDB$DATABASE WHERE EXISTS (
      SELECT SESS.SESS_ID

      FROM AMBIENTE_SIS AMBI

      JOIN CAIXA_SESSAO SESS ON
      AMBI.LOJA_ID = SESS.LOJA_ID
      AND AMBI.TERMINAL_ID  = SESS.TERMINAL_ID

      WHERE SESS.ABERTO 
    ) INTO :RESULTADO;
    
    :RESULTADO = COALESCE(:RESULTADO, 0);
    
    :TEM = :RESULTADO = 1;
    SUSPEND;
  END
  
/*  
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_VENDA_NAO_FINALIZADA;
*/
  PROCEDURE TEM_VENDA_NAO_FINALIZADA
  RETURNS
  (  
    TEM BOOLEAN
  )
  AS
    DECLARE RESULTADO INTEGER;
  BEGIN
    SELECT 1 FROM RDB$DATABASE WHERE EXISTS (
      SELECT SESS.SESS_ID

      FROM AMBIENTE_SIS AMBI

      JOIN CAIXA_SESSAO SESS ON
      AMBI.LOJA_ID = SESS.LOJA_ID
      AND AMBI.TERMINAL_ID  = SESS.TERMINAL_ID

      JOIN VENDA V ON
      V.SESS_LOJA_ID = SESS.LOJA_ID
      AND V.SESS_TERMINAL_ID  = SESS.TERMINAL_ID
      AND V.SESS_ID = SESS.SESS_ID

      JOIN EST_MOV E ON
      V.LOJA_ID = E.LOJA_ID
      AND V.TERMINAL_ID = E.TERMINAL_ID
      AND V.EST_MOV_ID = E.EST_MOV_ID

      WHERE SESS.ABERTO AND (NOT E.FINALIZADO) AND (NOT E.CANCELADO)
      ) INTO :RESULTADO;
    
    :RESULTADO = COALESCE(:RESULTADO, 0);
    
    :TEM = :RESULTADO = 1;
    SUSPEND;
  END
  
/*
SELECT * FROM CAIXA_SESSAO_PDV_PA.FECHAR_PODE_GET;
*/
  PROCEDURE FECHAR_PODE_GET
  RETURNS
  (
    PODE BOOLEAN
    , MENSAGEM_ID ID_DOM
  )
  AS
/*
  1 = 'Pode fechar o caixa';
  2 = 'Não há caixa aberto';
  3 = 'Há uma venda não finalizada';
*/  
    DECLARE TEM_CX_ABERTO BOOLEAN;
    DECLARE TEM_VEN_NAO_FIN BOOLEAN;
  BEGIN
    PODE = TRUE;
    MENSAGEM_ID = 1;
    
    SELECT TEM FROM CAIXA_SESSAO_PDV_PA.TEM_CAIXA_ABERTO INTO :TEM_CX_ABERTO;
    
    IF (NOT :TEM_CX_ABERTO) THEN
    BEGIN
      PODE = FALSE;
      MENSAGEM_ID = 2;
      SUSPEND;
      EXIT;
    END

    SELECT TEM FROM CAIXA_SESSAO_PDV_PA.TEM_VENDA_NAO_FINALIZADA INTO :TEM_VEN_NAO_FIN;
    
    IF (:TEM_VEN_NAO_FIN) THEN
    BEGIN
      PODE = FALSE;
      MENSAGEM_ID = 3;
      SUSPEND;
      EXIT;
    END

    SUSPEND;
  END
  
PROCEDURE FECHAMENTO_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  )
  AS
  BEGIN
    FOR
      WITH TIPO AS 
      (
        SELECT PAGAMENTO_FORMA_TIPO_ID ID, DESCR_RED
        FROM PAGAMENTO_FORMA_TIPO
        WHERE ATIVO
      ), FORMA AS
      (
          SELECT PAGAMENTO_FORMA_ID ID, PAGAMENTO_FORMA_TIPO_ID TIPO_ID, DESCR
          FROM PAGAMENTO_FORMA
          WHERE ATIVO AND PARA_VENDA
      )
      SELECT 
        FORMA.ID, 
        CASE
          WHEN TIPO.ID = '!' THEN FORMA.DESCR
          WHEN TIPO.ID = '"' THEN FORMA.DESCR || ' ' || TIPO.DESCR_RED
          WHEN TIPO.ID = '#' THEN FORMA.DESCR || ' ' || TIPO.DESCR_RED
          WHEN TIPO.ID = '$' THEN TIPO.DESCR_RED || ' ' || FORMA.DESCR
        END AS DESCR
      FROM TIPO
      JOIN FORMA ON
      TIPO.ID = FORMA.TIPO_ID
      ORDER BY FORMA.ID
    INTO :FORMA_ID, :DESCR
    DO SUSPEND;
  END
END^
SET TERM ;^
