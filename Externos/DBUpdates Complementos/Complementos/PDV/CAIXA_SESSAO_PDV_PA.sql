/*
CAIXA_SESSAO_PDV_PA
show package CAIXA_SESSAO_PDV_PA;

in "C:\Pr\App\Bantu\bantu-sis\src\Externos\DBUpdates Complementos\Complementos\PDV\caixa_sessao_pdv_pa.sql";

prefixos usados

FECH_TELA_ usado na tela de fechamento
SESS_RELAT_ usado nas rotinas do relatorio de caixa

----------------
-- 
SELECT * FROM CAIXA_SESSAO_PDV_PA.;
*/

/*
CREATE DOMAIN DINH_DOM AS NUMERIC(12,2);
*/

/*
procedures para antes do fechamento de caixa
o fechamento mesmo ocorre com:
CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_INSERIR_DO

----------------
--tem caixa aberto?
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_CAIXA_ABERTO;

----------------
--tem venda nao finalizada?
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_VENDA_NAO_FINALIZADA;

----------------
-- pode fechar caixa?
SELECT * FROM CAIXA_SESSAO_PDV_PA.FECHAR_PODE_GET;

----------------
lista usada no dataset da tela de fechamento
FORMA_ID DESCR
======== ============================================================
       1 DINHEIRO
       2 TRANSF PIX
       3 CREDICARD DEB
       4 CREDICARD CRE

SELECT * FROM CAIXA_SESSAO_PDV_PA.FECH_TELA_PAGFORMA_LISTA_GET;

----------------
*/

/*
a janela de sessao de caixa faz uma union entre 
lista de vendas e lista de operacoes de caixa

lista de vendas de uma sessao de caixa
SESS_TELA_VENDAS_LISTA_GET

lista de operacoes de caixa de uma sessao de caixa
SESS_TELA_CXOPER_LISTA_GET

union entre as duas, lista para a tela
SESS_TELA_LISTA_GET


SELECT * FROM CAIXA_SESSAO_PDV_PA.SESS_TELA_LISTA_GET(1, 1, 1);


SELECT * FROM CAIXA_SESSAO_PDV_PA.SESS_TELA_CXOPER_LISTA_GET(1, 1, 1);



*/


/*
relatorio de caixa

----------------
-- lista das formas de pagamento usadas no relatorio de caixa
FORMA_ID DESCR
======== =====================
       1 DIN
       2 PIX
       3 CREDI DEB
       4 CREDI CRE
       
SELECT * FROM CAIXA_SESSAO_PDV_PA.SESS_RELAT_PAGFORMA_LISTA_GET;

----------------
-- total de cada forma de pagamento das vendas
FORMA_ID                 TOTAL
======== =====================
       1               139.900
       2                 9.900
       3                35.000
       4                33.000

SELECT * FROM CAIXA_SESSAO_PDV_PA.SESS_VENDA_PAG_TOTAL_GET(1,1,1);

----------------
-- 


*/
SET TERM ^;
CREATE OR ALTER PACKAGE CAIXA_SESSAO_PDV_PA
AS
BEGIN
  PROCEDURE TEM_CAIXA_ABERTO
  RETURNS
  (  
    TEM BOOLEAN
  );
  
  PROCEDURE TEM_VENDA_NAO_FINALIZADA
  RETURNS
  (  
    TEM BOOLEAN
  );
  
  PROCEDURE FECHAR_PODE_GET
  RETURNS
  (
    PODE BOOLEAN
    , MENSAGEM_ID ID_DOM
  );
  
  PROCEDURE FECH_TELA_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  );
  
  PROCEDURE SESS_RELAT_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  );
  
  PROCEDURE SESS_TELA_VENDAS_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  );  
  
  PROCEDURE SESS_TELA_CXOPER_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  );  
  
  PROCEDURE SESS_TELA_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  );  
  
  PROCEDURE SESS_VENDA_PAG_TOTAL_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , TOTAL PRECO_DOM
  );  
  
  PROCEDURE SESS_RELAT_BYID_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LINHA VARCHAR(80)
  );
END^

---- BODY

RECREATE PACKAGE BODY CAIXA_SESSAO_PDV_PA
AS
BEGIN
/*
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_CAIXA_ABERTO;
*/
  PROCEDURE TEM_CAIXA_ABERTO
  RETURNS
  (  
    TEM BOOLEAN
  )
  AS
    DECLARE RESULTADO INTEGER;
  BEGIN
    SELECT 1 FROM RDB$DATABASE WHERE EXISTS (
      SELECT SESS.SESS_ID

      FROM AMBIENTE_SIS AMBI

      JOIN CAIXA_SESSAO SESS ON
      AMBI.LOJA_ID = SESS.LOJA_ID
      AND AMBI.TERMINAL_ID  = SESS.TERMINAL_ID

      WHERE SESS.ABERTO 
    ) INTO :RESULTADO;
    
    :RESULTADO = COALESCE(:RESULTADO, 0);
    
    :TEM = :RESULTADO = 1;
    SUSPEND;
  END
  
/*  
SELECT * FROM CAIXA_SESSAO_PDV_PA.TEM_VENDA_NAO_FINALIZADA;
*/
  PROCEDURE TEM_VENDA_NAO_FINALIZADA
  RETURNS
  (  
    TEM BOOLEAN
  )
  AS
    DECLARE RESULTADO INTEGER;
  BEGIN
    SELECT 1 FROM RDB$DATABASE WHERE EXISTS (
      SELECT SESS.SESS_ID

      FROM AMBIENTE_SIS AMBI

      JOIN CAIXA_SESSAO SESS ON
      AMBI.LOJA_ID = SESS.LOJA_ID
      AND AMBI.TERMINAL_ID  = SESS.TERMINAL_ID

      JOIN VENDA V ON
      V.SESS_LOJA_ID = SESS.LOJA_ID
      AND V.SESS_TERMINAL_ID  = SESS.TERMINAL_ID
      AND V.SESS_ID = SESS.SESS_ID

      JOIN EST_MOV E ON
      V.LOJA_ID = E.LOJA_ID
      AND V.TERMINAL_ID = E.TERMINAL_ID
      AND V.EST_MOV_ID = E.EST_MOV_ID

      WHERE SESS.ABERTO AND (NOT E.FINALIZADO) AND (NOT E.CANCELADO)
      ) INTO :RESULTADO;
    
    :RESULTADO = COALESCE(:RESULTADO, 0);
    
    :TEM = :RESULTADO = 1;
    SUSPEND;
  END
  
/*
SELECT * FROM CAIXA_SESSAO_PDV_PA.FECHAR_PODE_GET;
*/
  PROCEDURE FECHAR_PODE_GET
  RETURNS
  (
    PODE BOOLEAN
    , MENSAGEM_ID ID_DOM
  )
  AS
/*
  1 = 'Pode fechar o caixa';
  2 = 'Não há caixa aberto';
  3 = 'Há uma venda não finalizada';
*/  
    DECLARE TEM_CX_ABERTO BOOLEAN;
    DECLARE TEM_VEN_NAO_FIN BOOLEAN;
  BEGIN
    PODE = TRUE;
    MENSAGEM_ID = 1;
    
    SELECT TEM FROM CAIXA_SESSAO_PDV_PA.TEM_CAIXA_ABERTO INTO :TEM_CX_ABERTO;
    
    IF (NOT :TEM_CX_ABERTO) THEN
    BEGIN
      PODE = FALSE;
      MENSAGEM_ID = 2;
      SUSPEND;
      EXIT;
    END

    SELECT TEM FROM CAIXA_SESSAO_PDV_PA.TEM_VENDA_NAO_FINALIZADA INTO :TEM_VEN_NAO_FIN;
    
    IF (:TEM_VEN_NAO_FIN) THEN
    BEGIN
      PODE = FALSE;
      MENSAGEM_ID = 3;
      SUSPEND;
      EXIT;
    END

    SUSPEND;
  END
  
  PROCEDURE FECH_TELA_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  )
  AS
  BEGIN
    FOR
      WITH TIPO AS 
      (
        SELECT PAGAMENTO_FORMA_TIPO_ID ID, DESCR_RED
        FROM PAGAMENTO_FORMA_TIPO
        WHERE ATIVO
      ), FORMA AS
      (
          SELECT PAGAMENTO_FORMA_ID ID, PAGAMENTO_FORMA_TIPO_ID TIPO_ID, DESCR
          FROM PAGAMENTO_FORMA
          WHERE ATIVO AND PARA_VENDA
      )
      SELECT 
        FORMA.ID, 
        CASE
          WHEN TIPO.ID = '!' THEN FORMA.DESCR
          WHEN TIPO.ID = '"' THEN FORMA.DESCR || ' ' || TIPO.DESCR_RED
          WHEN TIPO.ID = '#' THEN FORMA.DESCR || ' ' || TIPO.DESCR_RED
          WHEN TIPO.ID = '$' THEN TIPO.DESCR_RED || ' ' || FORMA.DESCR
        END AS DESCR
      FROM TIPO
      JOIN FORMA ON
      TIPO.ID = FORMA.TIPO_ID
      ORDER BY FORMA.ID
    INTO :FORMA_ID, :DESCR
    DO SUSPEND;
  END
  
  PROCEDURE SESS_RELAT_PAGFORMA_LISTA_GET
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , DESCR NOME_DOM
  )
  AS
  BEGIN
    FOR
      WITH TIPO AS 
      (
        SELECT PAGAMENTO_FORMA_TIPO_ID ID, DESCR_RED
        FROM PAGAMENTO_FORMA_TIPO
        WHERE ATIVO
      ), FORMA AS
      (
          SELECT PAGAMENTO_FORMA_ID ID, PAGAMENTO_FORMA_TIPO_ID TIPO_ID,
            DESCR_RED
          FROM PAGAMENTO_FORMA
          WHERE ATIVO AND PARA_VENDA
      )
      SELECT 
        FORMA.ID, 
        CASE
          WHEN TIPO.ID = '!' THEN TRIM(FORMA.DESCR_RED)
          WHEN TIPO.ID = '"' THEN TRIM(FORMA.DESCR_RED) || ' ' || TRIM(TIPO.DESCR_RED)
          WHEN TIPO.ID = '#' THEN TRIM(FORMA.DESCR_RED) || ' ' || TRIM(TIPO.DESCR_RED)
          WHEN TIPO.ID = '$' THEN TRIM(FORMA.DESCR_RED)
        END AS DESCR
      FROM TIPO
      JOIN FORMA ON
      TIPO.ID = FORMA.TIPO_ID
      ORDER BY FORMA.ID
    INTO :FORMA_ID, :DESCR
    DO SUSPEND;
  END
  
  PROCEDURE SESS_TELA_VENDAS_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  )
  AS
  BEGIN
    FOR
      WITH E AS
      (
        SELECT LOJA_ID, TERMINAL_ID, EST_MOV_ID, CRIADO_EM, CANCELADO, CANCELADO_EM
        FROM EST_MOV
        WHERE FINALIZADO
      ), V AS
      (
        SELECT LOJA_ID, TERMINAL_ID, EST_MOV_ID, VENDA_ID, TOTAL_LIQUIDO 
        FROM VENDA
        WHERE SESS_LOJA_ID = :SESS_LOJA_ID
        AND SESS_TERMINAL_ID = :SESS_TERMINAL_ID
        AND SESS_ID = :SESS_ID
      )  
      SELECT 
        E.LOJA_ID
        , E.TERMINAL_ID
        , E.EST_MOV_ID
        , -1 AS LOG_ID
        , 0 AS ORDEM
        , '*' AS TIPO_ID
        , 'VENDA' AS TIPO_STR
        , E.CRIADO_EM
        , V.TOTAL_LIQUIDO AS VALOR
        , E.CANCELADO
        , E.CANCELADO_EM
        , '' AS OBS
      FROM E
      JOIN V
        ON E.LOJA_ID = V.LOJA_ID
        AND E.TERMINAL_ID = V.TERMINAL_ID
        AND E.EST_MOV_ID = V.EST_MOV_ID
    INTO
      :LOJA_ID
      , :TERMINAL_ID
      , :ID
      , :LOG_ID
      , :ORDEM
      , :TIPO_ID
      , :TIPO_STR
      , :CRIADO_EM
      , :VALOR
      , :CANCELADO
      , :CANCELADO_EM
      , :OBS
    DO SUSPEND;
  END
  
  PROCEDURE SESS_TELA_CXOPER_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  )
  AS
  BEGIN
    FOR
      WITH T AS
      (
        SELECT OPER_TIPO_ID, NAME
        FROM CAIXA_SESSAO_OPERACAO_TIPO
      ), O AS
      (
        SELECT LOJA_ID, TERMINAL_ID, SESS_ID,OPER_ORDEM, OPER_LOG_ID,
          OPER_TIPO_ID, VALOR, OBS, CANCELADO
        FROM CAIXA_SESSAO_OPERACAO
        WHERE LOJA_ID = :SESS_LOJA_ID
        AND TERMINAL_ID = :SESS_TERMINAL_ID
        AND SESS_ID = :SESS_ID
      ), L AS
      (
        SELECT LOJA_ID, TERMINAL_ID, LOG_ID, DTH
        FROM LOG
      )
      SELECT 
        O.LOJA_ID
        , O.TERMINAL_ID
        , O.SESS_ID AS ID
        , O.OPER_LOG_ID AS LOG_ID
        , O.OPER_ORDEM AS ORDEM
        , O.OPER_TIPO_ID AS TIPO_ID
        , T.NAME AS TIPO_STR
        , L.DTH AS CRIADO_EM
        , O.VALOR
        , O.CANCELADO
        , '01.01.1900' AS CANCELADO_EM
        , O.OBS
      FROM T
      JOIN O
        ON T.OPER_TIPO_ID = O.OPER_TIPO_ID
      JOIN L
        ON O.LOJA_ID = L.LOJA_ID
        AND O.TERMINAL_ID = L.TERMINAL_ID
        AND O.OPER_LOG_ID = L.LOG_ID
    INTO
      :LOJA_ID
      , :TERMINAL_ID
      , :ID
      , :LOG_ID
      , :ORDEM
      , :TIPO_ID
      , :TIPO_STR
      , :CRIADO_EM
      , :VALOR
      , :CANCELADO
      , :CANCELADO_EM
      , :OBS
    DO SUSPEND;
  END
  
  PROCEDURE SESS_TELA_LISTA_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LOJA_ID ID_SHORT_DOM
    , TERMINAL_ID ID_SHORT_DOM
    , ID ID_DOM
    , LOG_ID BIGINT
    , ORDEM SMALLINT
    , TIPO_ID ID_CHAR_DOM
    , TIPO_STR NOME_INTERM_DOM
    , CRIADO_EM TIMESTAMP
    , VALOR DINH_DOM
    , CANCELADO BOOLEAN
    , CANCELADO_EM TIMESTAMP
    , OBS VARCHAR(200)
  )
  AS
  BEGIN
    FOR
      SELECT 
        LOJA_ID
        , TERMINAL_ID
        , ID
        , LOG_ID
        , ORDEM
        , TIPO_ID
        , TIPO_STR
        , CRIADO_EM
        , VALOR
        , CANCELADO
        , CANCELADO_EM
        , OBS
      FROM SESS_TELA_VENDAS_LISTA_GET(
        :SESS_LOJA_ID
        , :SESS_TERMINAL_ID
        , :SESS_ID
      )
      UNION ALL
      SELECT 
        LOJA_ID
        , TERMINAL_ID
        , ID
        , LOG_ID
        , ORDEM
        , TIPO_ID
        , TIPO_STR
        , CRIADO_EM
        , VALOR
        , CANCELADO
        , CANCELADO_EM
        , OBS
      FROM SESS_TELA_CXOPER_LISTA_GET(
        :SESS_LOJA_ID
        , :SESS_TERMINAL_ID
        , :SESS_ID
      )
    INTO
      :LOJA_ID
      , :TERMINAL_ID
      , :ID
      , :LOG_ID
      , :ORDEM
      , :TIPO_ID
      , :TIPO_STR
      , :CRIADO_EM
      , :VALOR
      , :CANCELADO
      , :CANCELADO_EM
      , :OBS
    DO SUSPEND;
  END
  
  PROCEDURE SESS_VENDA_PAG_TOTAL_GET
  (
    SESS_LOJA_ID ID_SHORT_DOM NOT NULL
    , SESS_TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    FORMA_ID ID_SHORT_DOM
    , TOTAL PRECO_DOM
  )
  AS
  BEGIN
    FOR 
      WITH V AS (
        SELECT LOJA_ID, TERMINAL_ID, EST_MOV_ID, VENDA_ID
        FROM VENDA
        WHERE 
          SESS_LOJA_ID = :SESS_LOJA_ID
          AND SESS_TERMINAL_ID = :SESS_TERMINAL_ID
          AND SESS_ID = :SESS_ID
      ), 
      PAG AS (
        SELECT LOJA_ID, TERMINAL_ID, EST_MOV_ID, PAGAMENTO_FORMA_ID, VALOR_DEVIDO
        FROM VENDA_PAG
        WHERE NOT CANCELADO
      ),
      E AS (
        SELECT LOJA_ID, TERMINAL_ID, EST_MOV_ID
        FROM EST_MOV
        WHERE NOT CANCELADO AND FINALIZADO
      )
      SELECT 
        PAG.PAGAMENTO_FORMA_ID, 
        SUM(PAG.VALOR_DEVIDO) AS TOTAL
      FROM V
      JOIN PAG 
        ON V.LOJA_ID = PAG.LOJA_ID 
        AND V.TERMINAL_ID = PAG.TERMINAL_ID 
        AND V.EST_MOV_ID = PAG.EST_MOV_ID
      JOIN E 
        ON V.LOJA_ID = E.LOJA_ID 
        AND V.TERMINAL_ID = E.TERMINAL_ID 
        AND V.EST_MOV_ID = E.EST_MOV_ID
      GROUP BY PAG.PAGAMENTO_FORMA_ID
    INTO :FORMA_ID, :TOTAL
    DO SUSPEND;
  END
  
  PROCEDURE SESS_RELAT_BYID_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    LINHA VARCHAR(80)
  )
  AS
  BEGIN
    FOR 
      SELECT 'FP;' || FORMA_ID || ';' || DESCR
      FROM CAIXA_SESSAO_PDV_PA.SESS_RELAT_PAGFORMA_LISTA_GET -- (:LOJA_ID, :TERMINAL_ID, :SESS_ID)
    INTO LINHA
    DO SUSPEND;
  END
END^
SET TERM ;^
