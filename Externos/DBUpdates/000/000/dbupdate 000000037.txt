FABR



--nao usando
  PROCEDURE QTDREGS_GET
  (
    NOME_BUSCA NOME_REDU_NOTN_DOM
  )
  RETURNS
  (
    QTD_REGS INTEGER
  );
--nao usando
  PROCEDURE QTDREGS_GET
  (
    NOME_BUSCA NOME_REDU_NOTN_DOM
  )
  RETURNS
  (
    QTD_REGS INTEGER
  )
  AS 
  BEGIN 
    IF (TRIM(NOME_BUSCA) = '') THEN 
      FOR SELECT COUNT(F.FABR_ID) FROM FABR F INTO :QTD_REGS DO SUSPEND; 
    ELSE 
      FOR SELECT COUNT(F.FABR_ID) FROM FABR F WHERE F.NOME LIKE '%'||:NOME_BUSCA||'%' INTO :QTD_REGS DO SUSPEND; 
  END





//INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ALVO=SERVIDOR
DBATUALIZ_ASSUNTO=FABR
DBATUALIZ_OBJETIVO=CRIA FABR
DBATUALIZ_OBS=


/////////////////////////
// SEQUENCE FABR_SEQ
/////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE SEQUENCE
OBJETO_NOME=FABR_SEQ
VALOR_INICIAL=2
COMANDO FIM
// SEQUENCE FABR_SEQ FIM


/////////////////////////
//
// TABELA FABR
//
/////////////////////////
COMANDO INI

COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=FABR
COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM

FABR_ID;ID_SHORT_DOM;N;S
NOME;NOME_REDU_DOM;S;N;S

COLUNAS FIM
COMANDO FIM


// PACKAGE FABR_PA
COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=FABR_PA

```FIREBIRD
SET TERM ^;

CREATE OR ALTER PACKAGE FABR_PA
AS
BEGIN
  PROCEDURE LISTA_SELECT_GET
  RETURNS
  (
    REGTIPO SMALLINT
    , ID_RET SMALLINT
    , DESCR_RET VARCHAR(20)
  );

  PROCEDURE LISTA_GET
  (
    NOME_BUSCA NOME_REDU_NOTN_DOM
  )
  RETURNS
  (
    FABR_ID SMALLINT,
    NOME NOME_REDU_DOM
  );
  

  PROCEDURE BYID_GET
  (
    FABR_ID ID_SHORT_NOTN_DOM
  )
  RETURNS
  (
    NOME NOME_REDU_DOM
  );

  PROCEDURE GARANTIR
  (
    FABR_ID ID_SHORT_NOTN_DOM,
    NOME NOME_REDU_DOM NOT NULL
  )
  RETURNS
  (
    ID_GRAVADO SMALLINT
  );


  PROCEDURE BYNOME_GET
  (
    NOME NOME_REDU_DOM
  )
  RETURNS
  (
    FABR_ID SMALLINT
  );
END^

RECREATE PACKAGE BODY FABR_PA
AS
BEGIN
  PROCEDURE LISTA_SELECT_GET
  RETURNS
  (
    REGTIPO SMALLINT
    , ID_RET SMALLINT
    , DESCR_RET VARCHAR(20)
  )
  AS
  BEGIN
    FOR SELECT 1 AS REGTIPO, FABR_ID, NOME FROM LISTA_GET('')
    INTO :REGTIPO, :ID_RET, :DESCR_RET
    DO
      SUSPEND;
  END
  
  PROCEDURE LISTA_GET
  (
    NOME_BUSCA NOME_REDU_NOTN_DOM
  )
  RETURNS
  (
    FABR_ID SMALLINT,
    NOME NOME_REDU_DOM
  )
  AS 
  BEGIN 
    IF (TRIM(NOME_BUSCA) = '') THEN 
      FOR SELECT F.FABR_ID, F.NOME FROM FABR F INTO :FABR_ID, :NOME DO SUSPEND; 
    ELSE 
      FOR SELECT F.FABR_ID, F.NOME FROM FABR F WHERE F.NOME LIKE '%'||:NOME_BUSCA||'%' INTO :FABR_ID, :NOME DO SUSPEND; 
  END

  PROCEDURE BYID_GET
  (
    FABR_ID ID_SHORT_NOTN_DOM 
  )
  RETURNS
  (
    NOME NOME_REDU_DOM
  )
  AS  
  BEGIN  
    SELECT FIRST(1) F.NOME FROM FABR F WHERE F.FABR_ID = :FABR_ID INTO :NOME;  
    SUSPEND;
  END
  PROCEDURE GARANTIR
  (
    FABR_ID ID_SHORT_NOTN_DOM,
    NOME NOME_REDU_DOM NOT NULL
  )
  RETURNS
  (
    ID_GRAVADO SMALLINT
  )
  AS
  BEGIN
    IF (FABR_ID < 1) THEN
    BEGIN
      ID_GRAVADO = NEXT VALUE FOR FABR_SEQ;
    END
    ELSE
    BEGIN
      ID_GRAVADO = FABR_ID;
    END	
	
    UPDATE OR INSERT INTO FABR (FABR_ID, NOME)
    VALUES (:ID_GRAVADO, :NOME)
    MATCHING (FABR_ID);
    SUSPEND;
  END
  PROCEDURE BYNOME_GET
  (
    NOME NOME_REDU_DOM
  )
  RETURNS
  (
    FABR_ID SMALLINT
  )
  AS
  BEGIN
    SELECT FIRST(1) FABR_ID FROM FABR WHERE NOME = :NOME INTO :FABR_ID;
    SUSPEND;
  END
  
END^

SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
