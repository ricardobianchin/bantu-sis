PRODUTO_PA
PROD

//INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=PRODUTO_PA
DBATUALIZ_OBJETIVO=CRIA PRODUTO_PA
DBATUALIZ_OBS=





// PACKAGE PROD_PA
COMANDO INI
TIPO_COMANDO=CREATE OR ALTER PACKAGE
OBJETO_NOME=PROD_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );
  PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );
  PROCEDURE ID_DISPONIVEL_GET
  RETURNS (ID_DISPONIVEL_RET INTEGER);
  PROCEDURE EXISTENTES_GET
  (
    PROD_ID_EXCETO INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
    , DESCR_RET PROD_DESCR_DOM
    , DESCR_RED_RET PROD_DESCR_RED_DOM
    , FABR_ID_RET SMALLINT
    , FABR_NOME_RET NOME_REDU_DOM
  );


  PROCEDURE BY_COD_BARRAS_GET
  (
    COD_BARRAS CHAR(14) NOT NULL
    , PROD_ID_EXCETO INTEGER NOT NULL
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
  );

END^

RECREATE PACKAGE BODY PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS 
  BEGIN 
    FOR SELECT P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME DO SUSPEND; 
  END
   PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS  
  BEGIN  
    SELECT FIRST(1) P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME;
    SUSPEND;
  END
  
  PROCEDURE ID_DISPONIVEL_GET
  RETURNS (ID_DISPONIVEL_RET INTEGER)
  AS
    DECLARE VARIABLE MAX_PROD_ID INTEGER;
    DECLARE VARIABLE MIN_PROD_ID INTEGER;
    DECLARE VARIABLE CUR_PROD_ID INTEGER;
    DECLARE VARIABLE NEXT_PROD_ID INTEGER;
    DECLARE VARIABLE FOUND_GAP BOOLEAN;
  BEGIN
    MAX_PROD_ID = 0;
    MIN_PROD_ID = 1;
    FOUND_GAP = FALSE;
    SELECT MAX(PROD_ID) FROM PROD INTO :MAX_PROD_ID;
    IF (MAX_PROD_ID IS NULL) THEN
	BEGIN
      ID_DISPONIVEL_RET = 1;
	END
    ELSE
    BEGIN
      FOR SELECT PROD_ID FROM PROD ORDER BY PROD_ID INTO :CUR_PROD_ID DO
      BEGIN
        IF (CUR_PROD_ID > MIN_PROD_ID) THEN
        BEGIN
          NEXT_PROD_ID = CUR_PROD_ID - 1;
          FOUND_GAP = TRUE;
          LEAVE;
        END
        MIN_PROD_ID = CUR_PROD_ID + 1;
      END
      IF (FOUND_GAP) THEN
        ID_DISPONIVEL_RET = NEXT_PROD_ID;
      ELSE
        ID_DISPONIVEL_RET = MAX_PROD_ID + 1;
    END
  END
  PROCEDURE EXISTENTES_GET
  (
    PROD_ID_EXCETO INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
    , DESCR_RET PROD_DESCR_DOM
    , DESCR_RED_RET PROD_DESCR_RED_DOM
    , FABR_ID_RET SMALLINT
    , FABR_NOME_RET NOME_REDU_DOM
  )
  AS
  BEGIN
    FOR SELECT P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      WHERE (P.PROD_ID <> :PROD_ID_EXCETO)
      AND (
        (P.DESCR = :DESCR AND P.FABR_ID = :FABR_ID)
        OR (P.DESCR_RED = :DESCR_RED AND P.FABR_ID = :FABR_ID)
      )
      ORDER BY P.PROD_ID
      INTO :PROD_ID_RET, :DESCR_RET, :DESCR_RED_RET, FABR_ID_RET, 
      FABR_NOME_RET
    DO
    BEGIN
      SUSPEND;
    END
  END

  PROCEDURE BY_COD_BARRAS_GET
  (
    COD_BARRAS CHAR(14) NOT NULL
    , PROD_ID_EXCETO INTEGER NOT NULL
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
  )
  AS
  BEGIN
    SELECT FIRST(1) PROD_ID
    FROM PROD_BARRAS
    WHERE COD_BARRAS = :COD_BARRAS
    AND PROD_ID <> :PROD_ID_EXCETO
    INTO :PROD_ID_RET;

    SUSPEND;
  END

END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
