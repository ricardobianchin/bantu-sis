PRODUTO
PROD

//INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=PRODUTO
DBATUALIZ_OBJETIVO=CRIA PROD
DBATUALIZ_OBS=


/////////////////////////
// SEQUENCE PROD_SEQ
/////////////////////////
COMANDO INI
TIPO_COMANDO=CREATE SEQUENCE
OBJETO_NOME=PROD_SEQ
//VALOR_INICIAL=0
COMANDO FIM
// SEQUENCE PROD_SEQ FIM



/////////////////////////
// DOMAINS PROD
/////////////////////////
COMANDO INI
TIPO_COMANDO=CREATE DOMAINS
```FIREBIRD
CREATE DOMAIN PROD_DESCR_DOM     AS VARCHAR(120);
CREATE DOMAIN PROD_DESCR_RED_DOM AS VARCHAR(29);
```
COMANDO FIM



/////////////////////////
//
// TABELA PROD
//
/////////////////////////
COMANDO INI
TIPO_COMANDO=CREATE TABLE
OBJETO_NOME=PROD

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

PROD_ID;ID_DOM;S;S;N
DESCR;PROD_DESCR_DOM;S;N;N
DESCR_RED;PROD_DESCR_RED_DOM;S;N;N
FABR_ID;ID_SHORT_NOTN_DOM
PROD_TIPO;ID_CHAR_DOM;S,N,N
UNID_ID;ID_SHORT_NOTN_DOM
EST_ITEM_NATU_ID;ID_CHAR_DOM;S;N;N
COLUNAS FIM
COMANDO FIM



//////////////////////////////////
//
// UNIQUE KEY FABR_ID, DESCR
//
//////////////////////////////////
COMANDO INI
TIPO_COMANDO=CREATE UNIQUE KEY
OBJETO_NOME=
TABELA=PROD
CAMPOS=FABR_ID, DESCR
COMANDO FIM
//OBJETO_NOME Nao É obrigatorio
// UNIQUE KEY FABR_ID, DESCR



//////////////////////////////////
//
// UNIQUE KEY FABR_ID, DESCR_RED
//
//////////////////////////////////
COMANDO INI
TIPO_COMANDO=CREATE UNIQUE KEY
OBJETO_NOME=
TABELA=PROD
CAMPOS=FABR_ID, DESCR_RED
COMANDO FIM
//OBJETO_NOME Nao É obrigatorio
// UNIQUE KEY FABR_ID, DESCR_RED



// PACKAGE PROD_PA
COMANDO INI
TIPO_COMANDO=CREATE OR ALTER PACKAGE
OBJETO_NOME=PROD_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );
  PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );
  PROCEDURE GARANTIR
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )  
  RETURNS
  (
    ID_GRAVADO INTEGER
  );

  PROCEDURE EXISTENTES_GET
  (
    PROD_ID_EXCETO INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
    , DESCR_RET PROD_DESCR_DOM
    , DESCR_RED_RET PROD_DESCR_RED_DOM
    , FABR_ID_RET SMALLINT
    , FABR_NOME_RET NOME_REDU_DOM
  );

END^

RECREATE PACKAGE BODY PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS 
  BEGIN 
    FOR SELECT P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME DO SUSPEND; 
  END

   PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS  
  BEGIN  
    SELECT FIRST(1) P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME;
    SUSPEND;
  END
  
  PROCEDURE GARANTIR
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )
  RETURNS
  (
    ID_GRAVADO INTEGER
  )
  AS
  BEGIN
    IF (PROD_ID < 1) THEN
    BEGIN
      ID_GRAVADO = NEXT VALUE FOR PROD_SEQ;
  	END
    ELSE
    BEGIN
	    ID_GRAVADO = PROD_ID;
    END	
	
    UPDATE OR INSERT INTO PROD (PROD_ID, DESCR, DESCR_RED,
    FABR_ID)
    VALUES (:ID_GRAVADO, :DESCR, :DESCR_RED, :FABR_ID)
    MATCHING (PROD_ID);
    SUSPEND;
  END

  PROCEDURE EXISTENTES_GET
  (
    PROD_ID_EXCETO INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
    , DESCR_RET PROD_DESCR_DOM
    , DESCR_RED_RET PROD_DESCR_RED_DOM
    , FABR_ID_RET SMALLINT
    , FABR_NOME_RET NOME_REDU_DOM
  )
  AS
  BEGIN
    FOR SELECT P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      WHERE (P.PROD_ID <> :PROD_ID_EXCETO)
      AND (
        (P.DESCR = :DESCR AND P.FABR_ID = :FABR_ID)
        OR (P.DESCR_RED = :DESCR_RED AND P.FABR_ID = :FABR_ID)
      )
      ORDER BY P.PROD_ID
      
      INTO :PROD_ID_RET, :DESCR_RET, :DESCR_RED_RET, FABR_ID_RET, 
      FABR_NOME_RET
    DO
    BEGIN
      SUSPEND;
    END
  END
END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
