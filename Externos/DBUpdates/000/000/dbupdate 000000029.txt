USUARIO

//INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=USUARIOS
DBATUALIZ_OBJETIVO=CRIA USUARIO_PA
DBATUALIZ_OBS=




//////////////////////////////////
//
// PACKAGE USUARIO_PA
//
//////////////////////////////////

/*

C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Pess\usuario_pa.sql

"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Pess\usuario_pa.sql"

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Pess\usuario_pa.sql";

*/

COMANDO INI
TIPO_COMANDO=CREATE OR ALTER PACKAGE
OBJETO_NOME=USUARIO_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE USUARIO_PA
AS
BEGIN
  PROCEDURE GARANTIR_NOMES
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    NOME NOME_DOM NOT NULL,
    NOME_DE_USUARIO NOME_REDU_DOM NOT NULL,
    SENHA SENHA_DOM NOT NULL,
    CRY_VER ID_SHORT_DOM NOT NULL,
    APELIDO NOME_REDU_DOM NOT NULL,
    PESSOA_ID ID_DOM
  )
  RETURNS
  (
    PESSOA_ID_RET INTEGER 
  );

  PROCEDURE GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    NOME VARCHAR(60),
    NOME_FANTASIA VARCHAR(60),
    APELIDO VARCHAR(20),
    GENERO_ID CHAR(1),
    ESTADO_CIVIL_ID CHAR(1),
    C VARCHAR(15),
    I VARCHAR(15),
    M VARCHAR(15),
    M_UF CHAR(2),
    EMAIL VARCHAR(50),
    DT_NASC DATE,
    ATIVO BOOLEAN,
    PESSOA_ID ID_DOM,

    LOGRADOURO        VARCHAR(70),
    NUMERO            NOME_DOM,
    COMPLEMENTO       NOME_DOM,
    BAIRRO            NOME_DOM,
    UF_SIGLA          CHAR(2),
    CEP               CHAR(8),
    MUNICIPIO_IBGE_ID CHAR(7),
    DDD               CHAR(2),
    FONE1             NOME_CURTO_DOM,
    FONE2             NOME_CURTO_DOM,
    FONE3             NOME_CURTO_DOM,
    CONTATO           NOME_DOM,
    REFERENCIA        OBS1_DOM,
    
    NOME_DE_USUARIO NOME_REDU_DOM,
    SENHA SENHA_DOM,
    CRY_VER ID_SHORT_DOM
  )
  RETURNS
  (
    LOJA_ID_RET ID_SHORT_DOM,
    TERMINAL_ID_RET ID_SHORT_DOM,
    PESSOA_ID_RET ID_DOM
  );
  
  PROCEDURE TRAZER_OPCOES_PERFIL 
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL
  );

  PROCEDURE USUARIO_TEM_PERFIL_DE_USO_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    PERFIL_DE_USO_ID ID_DOM NOT NULL
  );

  PROCEDURE USUARIO_PODE_OPCAO_SIS_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    OPCAO_SIS_ID ID_DOM NOT NULL
  );

  PROCEDURE PODE_OPCOES_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    STR_OPCOES_ID VARCHAR(15000) NOT NULL
  );

  PROCEDURE BY_NOME_DE_USUARIO_GET 
  (
    NOME_DE_USUARIO NOME_REDU_DOM NOT NULL
  )
  RETURNS 
  (
    LOJA_ID ID_SHORT_DOM,
    TERMINAL_ID ID_SHORT_DOM,
    PESSOA_ID ID_DOM,
    NOME NOME_DOM,
    APELIDO NOME_REDU_DOM,
    CRY_VER ID_SHORT_DOM,
    SENHA SENHA_DOM,
    OPCAO_SIS_IDS_MODULO VARCHAR(1024)
  );

  PROCEDURE USUARIO_PODE_OPCAO_SIS_GET 
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    OPCAO_SIS_ID ID_DOM NOT NULL
  )
  RETURNS 
  (
    ACESSA BOOLEAN
  );
  
  PROCEDURE SENHA_SET (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    
    SENHA SENHA_DOM NOT NULL,
    CRY_VER ID_SHORT_DOM NOT NULL
  );
  

END^

/*

  -------- BODY
  
*/

RECREATE PACKAGE BODY USUARIO_PA
AS
BEGIN
  PROCEDURE GARANTIR_NOMES
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    NOME NOME_DOM NOT NULL,
    NOME_DE_USUARIO NOME_REDU_DOM NOT NULL,
    SENHA SENHA_DOM NOT NULL,
    CRY_VER ID_SHORT_DOM NOT NULL,
    APELIDO NOME_REDU_DOM NOT NULL,
    PESSOA_ID ID_DOM
  )
  RETURNS
  (
    PESSOA_ID_RET INTEGER 
  )
  AS
  BEGIN
    EXECUTE PROCEDURE FUNCIONARIO_PA.GARANTIR_NOMES(:LOJA_ID, :NOME, :APELIDO, :PESSOA_ID)
      RETURNING_VALUES :PESSOA_ID_RET;
    
    UPDATE OR INSERT INTO USUARIO (LOJA_ID, TERMINAL_ID, PESSOA_ID, NOME_DE_USUARIO, SENHA, CRY_VER)
    VALUES (:LOJA_ID, 0, :PESSOA_ID_RET, :NOME_DE_USUARIO, :SENHA, :CRY_VER)
    MATCHING (LOJA_ID, TERMINAL_ID, PESSOA_ID);
    
    SUSPEND; -- RETORNA O VALOR DE PESSOA_ID_RET
  END

  PROCEDURE GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    NOME VARCHAR(60),
    NOME_FANTASIA VARCHAR(60),
    APELIDO VARCHAR(20),
    GENERO_ID CHAR(1),
    ESTADO_CIVIL_ID CHAR(1),
    C VARCHAR(15),
    I VARCHAR(15),
    M VARCHAR(15),
    M_UF CHAR(2),
    EMAIL VARCHAR(50),
    DT_NASC DATE,
    ATIVO BOOLEAN,
    PESSOA_ID ID_DOM,

    LOGRADOURO        VARCHAR(70),
    NUMERO            NOME_DOM,
    COMPLEMENTO       NOME_DOM,
    BAIRRO            NOME_DOM,
    UF_SIGLA          CHAR(2),
    CEP               CHAR(8),
    MUNICIPIO_IBGE_ID CHAR(7),
    DDD               CHAR(2),
    FONE1             NOME_CURTO_DOM,
    FONE2             NOME_CURTO_DOM,
    FONE3             NOME_CURTO_DOM,
    CONTATO           NOME_DOM,
    REFERENCIA        OBS1_DOM,
    
    NOME_DE_USUARIO NOME_REDU_DOM,
    SENHA SENHA_DOM,
    CRY_VER ID_SHORT_DOM
  )
  RETURNS
  (
    LOJA_ID_RET ID_SHORT_DOM,
    TERMINAL_ID_RET ID_SHORT_DOM,
    PESSOA_ID_RET ID_DOM
  )
  AS
  BEGIN
    EXECUTE PROCEDURE FUNCIONARIO_PA.GARANTIR(
      :LOJA_ID,
      :TERMINAL_ID,
      :NOME,
      :NOME_FANTASIA,
      :APELIDO,
      :GENERO_ID,
      :ESTADO_CIVIL_ID,
      :C,
      :I,
      :M,
      :M_UF,
      :EMAIL,
      :DT_NASC,
      :ATIVO,
      :PESSOA_ID,
      :LOGRADOURO,
      :NUMERO,
      :COMPLEMENTO,
      :BAIRRO,
      :UF_SIGLA,
      :CEP,
      :MUNICIPIO_IBGE_ID,
      :DDD,
      :FONE1,
      :FONE2,
      :FONE3,
      :CONTATO,
      :REFERENCIA
    )
    RETURNING_VALUES :LOJA_ID_RET, :TERMINAL_ID_RET, :PESSOA_ID_RET;

    UPDATE OR INSERT INTO USUARIO (LOJA_ID, TERMINAL_ID, PESSOA_ID, NOME_DE_USUARIO, SENHA, CRY_VER)
    VALUES (:LOJA_ID_RET, :TERMINAL_ID_RET, :PESSOA_ID_RET, :NOME_DE_USUARIO, :SENHA, :CRY_VER)
    MATCHING (LOJA_ID, TERMINAL_ID, PESSOA_ID);

    SUSPEND; -- RETORNA O VALOR DE PESSOA_ID_RET
  END

  PROCEDURE TRAZER_OPCOES_PERFIL
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL
  )
  AS
    DECLARE VARIABLE OPCAO_SIS_ID ID_DOM;
  BEGIN
    DELETE FROM USUARIO_PODE_OPCAO_SIS WHERE LOJA_ID = :LOJA_ID AND TERMINAL_ID = 0 AND PESSOA_ID = :PESSOA_ID;
    
    FOR
      SELECT O.OPCAO_SIS_ID
      FROM PERFIL_DE_USO_PODE_OPCAO_SIS O

      JOIN USUARIO_TEM_PERFIL_DE_USO U
      ON O.PERFIL_DE_USO_ID = U.PERFIL_DE_USO_ID

      WHERE U.LOJA_ID = :LOJA_ID
        AND U.TERMINAL_ID = 0
        AND U.PESSOA_ID = :PESSOA_ID

    INTO :OPCAO_SIS_ID
    DO
    BEGIN
      INSERT INTO USUARIO_PODE_OPCAO_SIS 
      (LOJA_ID, TERMINAL_ID, PESSOA_ID, OPCAO_SIS_ID)
      VALUES (:LOJA_ID, 0, :PESSOA_ID, :OPCAO_SIS_ID);
    END
  END

  PROCEDURE USUARIO_TEM_PERFIL_DE_USO_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    PERFIL_DE_USO_ID ID_DOM NOT NULL
  )
  AS
  BEGIN
    UPDATE OR INSERT INTO USUARIO_TEM_PERFIL_DE_USO (LOJA_ID, TERMINAL_ID, PESSOA_ID, PERFIL_DE_USO_ID)
    VALUES (:LOJA_ID, 0, :PESSOA_ID, :PERFIL_DE_USO_ID)
    MATCHING (LOJA_ID, TERMINAL_ID, PESSOA_ID, PERFIL_DE_USO_ID);

    EXECUTE PROCEDURE TRAZER_OPCOES_PERFIL (LOJA_ID, PESSOA_ID);
  END
  
  PROCEDURE USUARIO_PODE_OPCAO_SIS_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    OPCAO_SIS_ID ID_DOM NOT NULL
  )
  AS
  BEGIN
    UPDATE OR INSERT INTO USUARIO_PODE_OPCAO_SIS (LOJA_ID, TERMINAL_ID, PESSOA_ID, OPCAO_SIS_ID)
    VALUES (:LOJA_ID, 0, :PESSOA_ID, :OPCAO_SIS_ID)
    MATCHING (LOJA_ID, TERMINAL_ID, PESSOA_ID, OPCAO_SIS_ID);
  END

  PROCEDURE PODE_OPCOES_GARANTIR
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    STR_OPCOES_ID VARCHAR(15000) NOT NULL
  )
  AS
    DECLARE VARIABLE OPCAO_SIS_ID_STR CHAR(11);
    DECLARE VARIABLE OPCAO_SIS_ID ID_DOM;
    DECLARE VARIABLE POSICAO ID_DOM;
    
  BEGIN
    DELETE FROM USUARIO_PODE_OPCAO_SIS WHERE LOJA_ID = :LOJA_ID AND PESSOA_ID = :PESSOA_ID;

    WHILE (STR_OPCOES_ID <> '') DO
    BEGIN
      POSICAO = POSITION(';' IN STR_OPCOES_ID);
      
      IF (POSICAO = 0) THEN
      BEGIN
        OPCAO_SIS_ID_STR = TRIM(STR_OPCOES_ID);
        STR_OPCOES_ID = '';
      END
      ELSE
      BEGIN
        OPCAO_SIS_ID_STR = TRIM(SUBSTRING(STR_OPCOES_ID FROM 1 FOR POSICAO - 1));
        STR_OPCOES_ID = SUBSTRING(STR_OPCOES_ID FROM POSICAO + 1);
      END
      
      IF (OPCAO_SIS_ID_STR <> '') THEN
      BEGIN
        OPCAO_SIS_ID = CAST(OPCAO_SIS_ID_STR AS ID_DOM);
        
        INSERT INTO USUARIO_PODE_OPCAO_SIS (LOJA_ID, TERMINAL_ID, PESSOA_ID, OPCAO_SIS_ID) 
        VALUES(:LOJA_ID, 0, :PESSOA_ID, :OPCAO_SIS_ID);
      END
    END
  END

  PROCEDURE BY_NOME_DE_USUARIO_GET
  (
    NOME_DE_USUARIO NOME_REDU_DOM NOT NULL
  )
  RETURNS 
  (
    LOJA_ID ID_SHORT_DOM,
    TERMINAL_ID ID_SHORT_DOM,
    PESSOA_ID ID_DOM,
    NOME NOME_DOM,
    APELIDO NOME_REDU_DOM,
    CRY_VER ID_SHORT_DOM,
    SENHA SENHA_DOM,
    OPCAO_SIS_IDS_MODULO VARCHAR(1024)
  )
  AS
  BEGIN
    FOR 
      WITH P AS(   
        SELECT LOJA_ID, TERMINAL_ID, PESSOA_ID, NOME, APELIDO
        FROM PESSOA
        WHERE TERMINAL_ID = 0
      ), U AS (  
        SELECT LOJA_ID, TERMINAL_ID, PESSOA_ID, CRY_VER, SENHA
        FROM USUARIO
        WHERE NOME_DE_USUARIO = :NOME_DE_USUARIO
      ), UPODE AS (
        SELECT LOJA_ID, TERMINAL_ID, PESSOA_ID, OPCAO_SIS_ID FROM USUARIO_PODE_OPCAO_SIS
      ), OP AS (
        SELECT OPCAO_SIS_ID FROM OPCAO_SIS
        WHERE OPCAO_TIPO_SIS_ID <= ASCII_CHAR(33)
      )
      SELECT 
        P.LOJA_ID,
        P.TERMINAL_ID,
        P.PESSOA_ID,
        P.NOME,
        P.APELIDO,
        U.CRY_VER,
        U.SENHA, 
        LIST(OP.OPCAO_SIS_ID) AS OPCAO_SIS_IDS_MODULO
      FROM P
      JOIN U ON
        P.LOJA_ID = U.LOJA_ID 
        AND P.TERMINAL_ID = U.TERMINAL_ID 
        AND P.PESSOA_ID = U.PESSOA_ID
      LEFT JOIN UPODE ON
        UPODE.LOJA_ID = U.LOJA_ID 
        AND UPODE.TERMINAL_ID = U.TERMINAL_ID 
        AND UPODE.PESSOA_ID = U.PESSOA_ID
      LEFT JOIN OP ON
        OP.OPCAO_SIS_ID = UPODE.OPCAO_SIS_ID
      GROUP BY P.LOJA_ID, P.TERMINAL_ID, P.TERMINAL_ID, P.PESSOA_ID, P.NOME, P.APELIDO, U.CRY_VER, U.SENHA
    INTO :LOJA_ID, :TERMINAL_ID, :PESSOA_ID, :NOME, :APELIDO, :CRY_VER, :SENHA, :OPCAO_SIS_IDS_MODULO
    DO
    BEGIN
      SUSPEND;
    END
  END

  PROCEDURE USUARIO_PODE_OPCAO_SIS_GET 
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    OPCAO_SIS_ID ID_DOM NOT NULL
  )
  RETURNS 
  (
    ACESSA BOOLEAN
  )
  AS
    DECLARE VARIABLE RESULTADO INTEGER;
  BEGIN
    SELECT 1 FROM RDB$DATABASE WHERE EXISTS (
    SELECT PESSOA_ID
    FROM USUARIO_PODE_OPCAO_SIS
    WHERE LOJA_ID = :LOJA_ID
    AND TERMINAL_ID = 0
    AND PESSOA_ID = :PESSOA_ID
    AND OPCAO_SIS_ID = :OPCAO_SIS_ID
    ) INTO :RESULTADO;

    :ACESSA = :RESULTADO = 1;
    SUSPEND;
  END
  
  PROCEDURE SENHA_SET (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,
    PESSOA_ID ID_DOM NOT NULL,
    
    SENHA SENHA_DOM NOT NULL,
    CRY_VER ID_SHORT_DOM NOT NULL
  )
  AS
  BEGIN
    UPDATE USUARIO SET
      SENHA = :SENHA,
      CRY_VER = :CRY_VER
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND PESSOA_ID = :PESSOA_ID;
  END
END^
SET TERM ;^
```

COMANDO FIM
//PACKAGE USUARIO_PA FIM


DBATUALIZ FIM
