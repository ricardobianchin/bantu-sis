PRECOS

DBATUALIZ INI
DBATUALIZ_PONTO_ALVO=SERVIDOR
DBATUALIZ_ASSUNTO=PRECOS
DBATUALIZ_OBJETIVO=CRIAR TABELAS PARA PRECO
DBATUALIZ_OBS=





/////////////////////////
//
// TABELA PROD_PRECO_HIST
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=PROD_PRECO_HIST

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

//NOME    TIPO    NOTNULL    PRIM    UNIQUE

PROD_ID;ID_DOM;S;S
{SE USA_TABPRECO=S}
PROD_PRECO_TABELA_ID;ID_SHORT_DOM;S;S
{FIMSE}

LOJA_ID;ID_SHORT_DOM;S;S
TERMINAL_ID;ID_SHORT_DOM;S;S
LOG_ID;BIGINT;S;S

PRECO;PRECO_DOM;S

CRIADO_EM;TIMESTAMP DEFAULT 'NOW'

COLUNAS FIM
COMANDO FIM
//TABELA PROD_PRECO_HIST FIM


//////////////////////////////////
//
// FOREIGN KEY PROD_PRECO_HIST PROD
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=PROD_PRECO_HIST
CAMPOS_FK=PROD_ID
TABELA_PK=PROD
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD_PRECO_HIST PROD FIM


{SE USA_TABPRECO=S}

//////////////////////////////////
//
// FOREIGN KEY PROD_PRECO_HIST PROD_PRECO_TABELA
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=PROD_PRECO_HIST
CAMPOS_FK=PROD_PRECO_TABELA_ID
TABELA_PK=PROD_PRECO_TABELA
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD_PRECO_HIST PROD_PRECO_TABELA FIM

{FIMSE}

//////////////////////////////////
//
// FOREIGN KEY PROD_PRECO_HIST LOG
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=PROD_PRECO_HIST
CAMPOS_FK=LOJA_ID,TERMINAL_ID,LOG_ID
TABELA_PK=LOG
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD_PRECO_HIST PROD FIM






/////////////////////////
//
// TABELA PROD_PRECO
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=PROD_PRECO

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

//NOME    TIPO    NOTNULL    PRIM    UNIQUE

PROD_ID;ID_DOM;S;S
{SE USA_TABPRECO=S}
PROD_PRECO_TABELA_ID;ID_SHORT_DOM;S;S
{FIMSE}

LOJA_ID;ID_SHORT_DOM;S
TERMINAL_ID;ID_SHORT_DOM;S
LOG_ID;BIGINT;S

PRECO;PRECO_DOM;S

CRIADO_EM;TIMESTAMP

COLUNAS FIM
COMANDO FIM
//TABELA PROD_PRECO FIM


//////////////////////////////////
//
// FOREIGN KEY PROD_PRECO PROD
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=PROD_PRECO
CAMPOS_FK=PROD_ID
TABELA_PK=PROD
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD_PRECO PROD FIM

{SE USA_TABPRECO=S}

//////////////////////////////////
//
// FOREIGN KEY PROD_PRECO PROD_PRECO_TABELA
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=PROD_PRECO
CAMPOS_FK=PROD_PRECO_TABELA_ID
TABELA_PK=PROD_PRECO_TABELA
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD_PRECO_HIST PROD_PRECO_TABELA FIM
{FIMSE}



//PACKAGE PROD_PRECO_PA

COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=PROD_PRECO_PA
```FIREBIRD

SET TERM ^;
CREATE OR ALTER PACKAGE PROD_PRECO_PA
AS
BEGIN
  PROCEDURE PROD_PRECO_HIST_INS
  (
    P_PROD_ID INTEGER,

{SE USA_TABPRECO=S}
    P_PROD_PRECO_TABELA_ID ID_SHORT_DOM,
{FIMSE}

    P_LOJA_ID SMALLINT,
    P_PESSOA_ID ID_DOM,
    P_MACHINE_ID ID_SHORT_DOM,
    
    P_PRECO PRECO_DOM
  )
  RETURNS
  (
    LOG_ID_RET BIGINT
  );
END^

RECREATE PACKAGE BODY PROD_PRECO_PA
AS
  // VARS LOG VAR LOG VARLOG VARSLOG preco
BEGIN
  PROCEDURE PROD_PRECO_HIST_INS
  (
    P_PROD_ID INTEGER,
{SE USA_TABPRECO=S}
    P_PROD_PRECO_TABELA_ID ID_SHORT_DOM,
{FIMSE}

    P_LOJA_ID SMALLINT,
    P_PESSOA_ID ID_DOM,
    P_MACHINE_ID ID_SHORT_DOM,

    P_PRECO PRECO_DOM
  )
  RETURNS
  (
    LOG_ID_RET BIGINT
  )
  AS
    DECLARE FEATURE_SIS_ID ID_SHORT_DOM = 10;//PRECOS
    DECLARE RETAGUARDA_TERMINAL_ID ID_SHORT_DOM = 0;
    DECLARE RETAGUARDA_MODULO_SIS_ID ID_CHAR_DOM = '"';
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%';//INSERIR
    DECLARE DTH TIMESTAMP;
  BEGIN
    IF (P_PRECO <= 0) THEN
    BEGIN
      LOG_ID_RET = 0;
      EXIT;
    END

    SELECT LOG_ID_RET, DTH FROM LOG_PA.LOG_NOVO_GET
    (
      :P_LOJA_ID,
      :RETAGUARDA_TERMINAL_ID,
      :P_PESSOA_ID,
      :RETAGUARDA_MODULO_SIS_ID,
      :ACAO_SIS_ID,
      :FEATURE_SIS_ID,
      :P_MACHINE_ID
    ) INTO :LOG_ID_RET, :DTH;

    INSERT INTO PROD_PRECO_HIST
    (
      PROD_ID,
{SE USA_TABPRECO=S}
      PROD_PRECO_TABELA_ID,
{FIMSE}


      LOJA_ID,
      TERMINAL_ID,
      LOG_ID,

      PRECO,

      CRIADO_EM
    )
    VALUES(
      :P_PROD_ID,
{SE USA_TABPRECO=S}
      :P_PROD_PRECO_TABELA_ID,
{FIMSE}

      :P_LOJA_ID,
      :RETAGUARDA_TERMINAL_ID,
      :LOG_ID_RET,

      :P_PRECO,

      :DTH
    );

    UPDATE OR INSERT INTO PROD_PRECO (PROD_ID, {SE USA_TABPRECO=S}PROD_PRECO_TABELA_ID,{FIMSE} LOJA_ID, TERMINAL_ID, LOG_ID,
      PRECO, CRIADO_EM)
    VALUES (:P_PROD_ID, {SE USA_TABPRECO=S}:P_PROD_PRECO_TABELA_ID,{FIMSE} :P_LOJA_ID, :RETAGUARDA_TERMINAL_ID, :LOG_ID_RET, 
      :P_PRECO, :DTH)
    MATCHING (PROD_ID);  


    EXECUTE PROCEDURE LOG_PA.LOG_ENVOLVE_ID_INS
    (
      :P_LOJA_ID,
      :RETAGUARDA_TERMINAL_ID,
      :LOG_ID_RET,
      0,

      NULL, -- LOJA_ID_ENVOLVIDO SMALLINT,
      NULL, -- TERMINAL_ID_ENVOLVIDO SMALLINT,
      P_PROD_ID, -- ID_ENVOLVIDO INTEGER,
      0 -- ORDEM_ENVOLVIDO SMALLINT
    );

  END
END^
SET TERM ;^

```
COMANDO FIM
//PACKAGE PROD_PRECO_PA FIM

DBATUALIZ FIM


