LOG

-----------------------------
TESTES INICIO
-----------------------------

SHOW SEQUENCE LOG_SEQ;

SHOW TABLE LOG;

SELECT * FROM ;

SHOW PACKAGE LOG_PA;


-----
SELECT * FROM LOG_PA.LOG_NOVO_GET(1,0,1,ASCII_CHAR(34),ASCII_CHAR(35),1,0);

    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,

    PESSOA_ID ID_DOM NOT NULL,
    MODULO_ID ID_CHAR_DOM NOT NULL,
    ACAO_SIS_ID ID_CHAR_DOM NOT NULL,
    FEATURE_ID ID_SHORT_DOM NOT NULL,
    MACHINE_ID ID_SHORT_DOM NOT NULL


-----------------------------
TESTES FIM 
-----------------------------

-----------------------------
INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=LOG
DBATUALIZ_OBJETIVO=CRIAR LOG, LOG_INS, LOG_ALT, LOG_EXCL
DBATUALIZ_OBS=



/////////////////////////
//
// SEQUENCE LOG_SEQ
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE SEQUENCE
OBJETO_NOME=LOG_SEQ
//VALOR_INICIAL=2
COMANDO FIM
// SEQUENCE LOG_SEQ FIM





/////////////////////////
//
// TABELA LOG
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=LOG

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

//NOME    TIPO    NOTNULL    PRIM    UNIQUE

LOJA_ID;ID_SHORT_DOM;S;S
TERMINAL_ID;ID_SHORT_DOM;S;S
LOG_ID;BIGINT;S;S

DTH;DTH_INS_DOM;S
PESSOA_ID;ID_DOM;S

MODULO_ID;ID_CHAR_DOM;S
ACAO_SIS_ID;ID_CHAR_DOM;S

FEATURE_ID;ID_SHORT_DOM;S
MACHINE_ID;ID_SHORT_DOM;S

COLUNAS FIM
COMANDO FIM
//TABELA LOG FIM





/////////////////////////
//
// TABELA LOG_ENVOLVE_ID
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=LOG_ENVOLVE_ID

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

//NOME    TIPO    NOTNULL    PRIM    UNIQUE

LOJA_ID;ID_SHORT_DOM;S;S
TERMINAL_ID;ID_SHORT_DOM;S;S
LOG_ID;BIGINT;S;S
ORDEM;SMALLINT DEFAULT 0;S;S

LOJA_ID_ENVOLVIDO;ID_SHORT_DOM
TERMINAL_ID_ENVOLVIDO;ID_SHORT_DOM
ID_ENVOLVIDO;INTEGER
ORDEM_ENVOLVIDO;SMALLINT

COLUNAS FIM
COMANDO FIM
//TABELA LOG_ENVOLVE_ID FIM


//////////////////////////////////
//
// FOREIGN KEY LOG LOG_ENVOLVE_ID
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=LOG_ENVOLVE_ID
CAMPOS_FK=LOJA_ID,TERMINAL_ID,LOG_ID
TABELA_PK=LOG
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD FABR FIM



/////////////////////////
//
// TABELA LOG_DESCR
//
/////////////////////////

COMANDO INI
COMANDO_TIPO=CREATE TABLE
OBJETO_NOME=LOG_DESCR

COLUNAS INI
//NOME;TIPO;NOT NULL;PRIM;UNIQUE

//NOME    TIPO    NOTNULL    PRIM    UNIQUE

LOJA_ID;ID_SHORT_DOM;S;S
TERMINAL_ID;ID_SHORT_DOM;S;S
LOG_ID;BIGINT;S;S

DESCR;VARCHAR(2000);S

COLUNAS FIM
COMANDO FIM
//TABELA LOG_ENVOLVE_ID FIM




//////////////////////////////////
//
// FOREIGN KEY LOG LOG_DESCR
//
//////////////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE FOREIGN KEY
//OBJETO_NOME=
TABELA_FK=LOG_DESCR
CAMPOS_FK=LOJA_ID,TERMINAL_ID,LOG_ID
TABELA_PK=LOG
//CAMPOS_PK=
COMANDO FIM
//OBJETO_NOME e CAMPOS_PK nao sao obrigatorios
// FOREIGN KEY PROD FABR FIM



/*
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\DB\
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\DB\log_pa.sql

"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\DB\log_pa.sql"

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\DB\log_pa.sql";
*/

//PACKAGE LOG_PA

COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=LOG_PA
```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE LOG_PA
AS
BEGIN
  PROCEDURE LOG_NOVO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,

    PESSOA_ID ID_DOM NOT NULL,
    MODULO_ID ID_CHAR_DOM NOT NULL,
    ACAO_SIS_ID ID_CHAR_DOM NOT NULL,
    FEATURE_ID ID_SHORT_DOM NOT NULL,
    MACHINE_ID ID_SHORT_DOM NOT NULL
  ) 
  RETURNS 
  (
    LOG_ID_RET BIGINT
    , DTH TIMESTAMP
  );

  PROCEDURE LOG_ENVOLVE_ID_INS
  (
    LOG_LOJA_ID SMALLINT,
    LOG_TERMINAL_ID SMALLINT,
    LOG_ID BIGINT,
    LOG_ORDEM SMALLINT,

    LOJA_ID_ENVOLVIDO SMALLINT,
    TERMINAL_ID_ENVOLVIDO SMALLINT,
    ID_ENVOLVIDO INTEGER,
    ORDEM_ENVOLVIDO SMALLINT
  );

  -- LOG_PA.LOG_INSERIR DEF
  PROCEDURE LOG_INSERIR
  (
    LOG_LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MODULO_ID ID_CHAR_DOM NOT NULL
    , ACAO_SIS_ID ID_CHAR_DOM NOT NULL
    , FEATURE_ID ID_SHORT_DOM
    , MACHINE_ID ID_SHORT_DOM NOT NULL

    , LOG_ORDEM SMALLINT
    , ENVOLVIDO_LOJA_ID ID_SHORT_DOM
    , ENVOLVIDO_TERMINAL_ID ID_SHORT_DOM
    , ENVOLVIDO_ID INTEGER
    , ENVOLVDO_ORDEM SMALLINT
  )
  RETURNS
  (
    LOG_ID_RET BIGINT
  );

END^

RECREATE PACKAGE BODY LOG_PA
AS
BEGIN
  PROCEDURE LOG_NOVO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL,
    TERMINAL_ID ID_SHORT_DOM NOT NULL,

    PESSOA_ID ID_DOM NOT NULL,
    MODULO_ID ID_CHAR_DOM NOT NULL,
    ACAO_SIS_ID ID_CHAR_DOM NOT NULL,
    FEATURE_ID ID_SHORT_DOM NOT NULL,
    MACHINE_ID ID_SHORT_DOM NOT NULL
  ) 
  RETURNS 
  (
    LOG_ID_RET BIGINT
    , DTH TIMESTAMP
  ) 
  AS 
  BEGIN
    LOG_ID_RET = NEXT VALUE FOR LOG_SEQ;

    INSERT INTO LOG
    (
      LOJA_ID, TERMINAL_ID, LOG_ID,

      PESSOA_ID,
      MODULO_ID,
      ACAO_SIS_ID,
      
      FEATURE_ID,
      MACHINE_ID
    )
    VALUES
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_ID_RET,

      :PESSOA_ID,
      :MODULO_ID,
      :ACAO_SIS_ID,
      
      :FEATURE_ID,
      :MACHINE_ID
    ) 
    RETURNING DTH INTO :DTH;
    SUSPEND;
  END

  PROCEDURE LOG_ENVOLVE_ID_INS
  (
    LOG_LOJA_ID SMALLINT,
    LOG_TERMINAL_ID SMALLINT,
    LOG_ID BIGINT,
    LOG_ORDEM SMALLINT,

    LOJA_ID_ENVOLVIDO SMALLINT,
    TERMINAL_ID_ENVOLVIDO SMALLINT,
    ID_ENVOLVIDO INTEGER,
    ORDEM_ENVOLVIDO SMALLINT
  )
  AS
  BEGIN
    INSERT INTO LOG_ENVOLVE_ID 
    (
      LOJA_ID
      , TERMINAL_ID
      , LOG_ID
      , ORDEM

      , LOJA_ID_ENVOLVIDO
      , TERMINAL_ID_ENVOLVIDO
      , ID_ENVOLVIDO
      , ORDEM_ENVOLVIDO
      
    )
    VALUES (
      :LOG_LOJA_ID,
      :LOG_TERMINAL_ID,
      :LOG_ID,
      :LOG_ORDEM,

      :LOJA_ID_ENVOLVIDO,
      :TERMINAL_ID_ENVOLVIDO,
      :ID_ENVOLVIDO,
      :ORDEM_ENVOLVIDO
    );

  END
  
  -- LOG_PA.LOG_INSERIR IMP
  PROCEDURE LOG_INSERIR
  (
    LOG_LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MODULO_ID ID_CHAR_DOM NOT NULL
    , ACAO_SIS_ID ID_CHAR_DOM NOT NULL
    , FEATURE_ID ID_SHORT_DOM
    , MACHINE_ID ID_SHORT_DOM NOT NULL

    , LOG_ORDEM SMALLINT
    , ENVOLVIDO_LOJA_ID ID_SHORT_DOM
    , ENVOLVIDO_TERMINAL_ID ID_SHORT_DOM
    , ENVOLVIDO_ID INTEGER
    , ENVOLVDO_ORDEM SMALLINT
  )
  RETURNS
  (
    LOG_ID_RET BIGINT
  )
  AS
  BEGIN
    -- LOG_PA.LOG_INSERIR COD
    SELECT LOG_ID_RET 
    FROM LOG_NOVO_GET
    (
      :LOG_LOJA_ID,
      :TERMINAL_ID,
      :LOG_PESSOA_ID,
      :MODULO_ID,
      :ACAO_SIS_ID,
      :FEATURE_ID,
      :MACHINE_ID
    ) INTO :LOG_ID_RET;

    SUSPEND;

    IF ( ENVOLVIDO_LOJA_ID IS NULL AND ENVOLVIDO_TERMINAL_ID IS NULL AND  ENVOLVIDO_ID IS NULL) THEN
      EXIT;

    EXECUTE PROCEDURE LOG_ENVOLVE_ID_INS
    (
      :LOG_LOJA_ID,
      :TERMINAL_ID,
      :LOG_ID_RET,

      :LOG_ORDEM,

      :ENVOLVIDO_LOJA_ID,
      :ENVOLVIDO_TERMINAL_ID,
      :ENVOLVIDO_ID,
      :ENVOLVDO_ORDEM
    );
  END

END^
SET TERM ;^
```
COMANDO FIM
//PACKAGE LOG_PA FIM

DBATUALIZ FIM


