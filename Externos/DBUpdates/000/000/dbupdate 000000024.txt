PRODUTO_PA
PROD

//INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=PRODUTO_PA
DBATUALIZ_OBJETIVO=CRIA PRODUTO_PA
DBATUALIZ_OBS=





// PACKAGE PROD_PA
COMANDO INI
TIPO_COMANDO=CREATE OR ALTER PACKAGE
OBJETO_NOME=PROD_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );

  PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  );

  PROCEDURE ID_DISPONIVEL_GET
  RETURNS (ID_DISPONIVEL_RET INTEGER);

  PROCEDURE BY_COD_BARRAS_GET
  (
    COD_BARRAS CHAR(14) NOT NULL
    , PROD_ID_EXCETO INTEGER NOT NULL
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
  );

  PROCEDURE INSERT_INTO_PROD 
  (
    DESCR           PROD_DESCR_DOM NOT NULL
    , DESCR_RED     PROD_DESCR_RED_DOM NOT NULL

    , FABR_ID       ID_SHORT_NOTN_DOM NOT NULL
    , PROD_TIPO_ID  ID_SHORT_NOTN_DOM NOT NULL
    , UNID_ID       ID_SHORT_NOTN_DOM NOT NULL
    , ICMS_ID       ID_SHORT_NOTN_DOM NOT NULL

    , CAPAC_EMB     NUMERIC(8, 3) NOT NULL

    , LOJA_ID            ID_SHORT_DOM NOT NULL
    , ATIVO              BOOLEAN NOT NULL
    , LOCALIZ            NOME_CURTO_DOM NOT NULL

    , BAL_USO            SMALLINT NOT NULL
    , BAL_DPTO           CHAR(3)  NOT NULL
    , BAL_VALIDADE_DIAS  SMALLINT  NOT NULL
    , BAL_TEXTO_ETIQ     VARCHAR(400)  NOT NULL

    , CODIGOS_DE_BARRA VARCHAR(2000)
  )
  RETURNS
  (
    PROD_ID INTEGER)
  ;

  PROCEDURE BARCODES_GAR
  (
    PROD_ID INTEGER,
    CODIGOS_DE_BARRA VARCHAR(2000)
  );
  
END^

RECREATE PACKAGE BODY PROD_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  RETURNS
  (
    PROD_ID INTEGER
    , DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS 
  BEGIN 
    FOR SELECT P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME DO SUSPEND; 
  END
   PROCEDURE BYID_GET
  (
    PROD_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    DESCR PROD_DESCR_DOM
    , DESCR_RED PROD_DESCR_RED_DOM
    , FABR_ID SMALLINT
    , FABR_NOME NOME_REDU_DOM
  )
  AS  
  BEGIN  
    SELECT FIRST(1) P.PROD_ID, P.DESCR, P.DESCR_RED,
      F.FABR_ID, F.NOME FABR_NOME
      FROM PROD P
      JOIN FABR F ON
      P.FABR_ID = F.FABR_ID
      ORDER BY P.PROD_ID
      INTO :PROD_ID, :DESCR, :DESCR_RED, FABR_ID, 
      FABR_NOME;
    SUSPEND;
  END
  
  PROCEDURE ID_DISPONIVEL_GET
  RETURNS (ID_DISPONIVEL_RET INTEGER)
  AS
    DECLARE VARIABLE MAX_PROD_ID INTEGER;
    DECLARE VARIABLE MIN_PROD_ID INTEGER;
    DECLARE VARIABLE CUR_PROD_ID INTEGER;
    DECLARE VARIABLE NEXT_PROD_ID INTEGER;
    DECLARE VARIABLE FOUND_GAP BOOLEAN;
  BEGIN
    MAX_PROD_ID = 0;
    MIN_PROD_ID = 1;
    FOUND_GAP = FALSE;

    SELECT MAX(PROD_ID) FROM PROD INTO :MAX_PROD_ID;

    IF (MAX_PROD_ID IS NULL) THEN
	  BEGIN
      ID_DISPONIVEL_RET = 1;
	  END
    ELSE
    BEGIN
      FOR SELECT PROD_ID FROM PROD ORDER BY PROD_ID INTO :CUR_PROD_ID DO
      BEGIN
        IF (CUR_PROD_ID > MIN_PROD_ID) THEN
        BEGIN
          NEXT_PROD_ID = CUR_PROD_ID - 1;
          FOUND_GAP = TRUE;
          LEAVE;
        END
        MIN_PROD_ID = CUR_PROD_ID + 1;
      END
      IF (FOUND_GAP) THEN
        ID_DISPONIVEL_RET = NEXT_PROD_ID;
      ELSE
        ID_DISPONIVEL_RET = MAX_PROD_ID + 1;
    END
  END

  PROCEDURE BY_COD_BARRAS_GET
  (
    COD_BARRAS CHAR(14) NOT NULL
    , PROD_ID_EXCETO INTEGER NOT NULL
  )
  RETURNS
  (
    PROD_ID_RET INTEGER
  )
  AS
  BEGIN
    SELECT FIRST(1) PROD_ID
    FROM PROD_BARRAS
    WHERE COD_BARRAS = :COD_BARRAS
    AND PROD_ID <> :PROD_ID_EXCETO
    INTO :PROD_ID_RET;

    SUSPEND;
  END

  PROCEDURE INSERT_INTO_PROD 
  (
    DESCR           PROD_DESCR_DOM NOT NULL
    , DESCR_RED     PROD_DESCR_RED_DOM NOT NULL

    , FABR_ID       ID_SHORT_NOTN_DOM NOT NULL
    , PROD_TIPO_ID  ID_SHORT_NOTN_DOM NOT NULL
    , UNID_ID       ID_SHORT_NOTN_DOM NOT NULL
    , ICMS_ID       ID_SHORT_NOTN_DOM NOT NULL

    , CAPAC_EMB     NUMERIC(8, 3) NOT NULL

    , LOJA_ID            ID_SHORT_DOM NOT NULL
    , ATIVO              BOOLEAN NOT NULL
    , LOCALIZ            NOME_CURTO_DOM NOT NULL

    , BAL_USO            SMALLINT NOT NULL
    , BAL_DPTO           CHAR(3)  NOT NULL
    , BAL_VALIDADE_DIAS  SMALLINT  NOT NULL
    , BAL_TEXTO_ETIQ     VARCHAR(400)  NOT NULL

    , CODIGOS_DE_BARRA VARCHAR(2000)
  )
  RETURNS (
    PROD_ID INTEGER)
  AS
  BEGIN
    PROD_ID = NEXT VALUE FOR PROD_SEQ;

    INSERT INTO prod (PROD_ID, DESCR, DESCR_RED, FABR_ID, PROD_TIPO_ID, UNID_ID, ICMS_ID, CAPAC_EMB)
    VALUES (:PROD_ID, :DESCR, :DESCR_RED, :FABR_ID, :PROD_TIPO_ID, :UNID_ID, :ICMS_ID, :CAPAC_EMB);

    INSERT INTO PROD_COMPL (
      PROD_ID, LOJA_ID, ATIVO, LOCALIZ, BAL_USO, BAL_DPTO, BAL_VALIDADE_DIAS,
      BAL_TEXTO_ETIQ)
    VALUES (:PROD_ID, :LOJA_ID, :ATIVO, :LOCALIZ, :BAL_USO, :BAL_DPTO,
      :BAL_VALIDADE_DIAS, :BAL_TEXTO_ETIQ);

    EXECUTE PROCEDURE BARCODES_GAR(PROD_ID, CODIGOS_DE_BARRA);

    SUSPEND;
  END

  PROCEDURE BARCODES_GAR
  (
    PROD_ID INTEGER,
    CODIGOS_DE_BARRA VARCHAR(2000)
  )
  AS
    DECLARE VARIABLE ORDEM SMALLINT;
    DECLARE VARIABLE COD_BARRAS CHAR(14);
    DECLARE VARIABLE POSICAO INTEGER;
  BEGIN
    DELETE FROM PROD_BARRAS WHERE PROD_ID = :PROD_ID;

    ORDEM = 0;

    WHILE (CODIGOS_DE_BARRA <> '') DO
    BEGIN
      ORDEM = ORDEM + 1;

      POSICAO = POSITION(';' IN CODIGOS_DE_BARRA);
      IF (POSICAO = 0) THEN
      BEGIN
        COD_BARRAS = TRIM(CODIGOS_DE_BARRA);
        CODIGOS_DE_BARRA = '';
      END
      ELSE
      BEGIN
        COD_BARRAS = TRIM(SUBSTRING(CODIGOS_DE_BARRA FROM 1 FOR POSICAO - 1));
        CODIGOS_DE_BARRA = SUBSTRING(CODIGOS_DE_BARRA FROM POSICAO + 1);
      END

      INSERT INTO PROD_BARRAS (PROD_ID, ORDEM, COD_BARRAS)
      VALUES (:PROD_ID, :ORDEM, :COD_BARRAS);
    END
  END
END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM


-------------
DESCR             INPUT (PROD_DESCR_DOM) VARCHAR(120) CHARACTER SET WIN1252
DESCR_RED         INPUT (PROD_DESCR_RED_DOM) VARCHAR(29) CHARACTER SET WIN1252
FABR_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
PROD_TIPO_ID      INPUT (ID_SHORT_NOTN_DOM) SMALLINT
UNID_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
ICMS_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
CAPAC_EMB         INPUT NUMERIC(8, 3)
LOJA_ID           INPUT (ID_SHORT_DOM) SMALLINT
ATIVO             INPUT BOOLEAN
LOCALIZ           INPUT (NOME_CURTO_DOM) VARCHAR(15) CHARACTER SET WIN1252
BAL_USO           INPUT SMALLINT
BAL_DPTO          INPUT CHAR(3) CHARACTER SET WIN1252
BAL_VALIDADE_DIAS INPUT SMALLINT
BAL_TEXTO_ETIQ    INPUT VARCHAR(400) CHARACTER SET WIN1252
PROD_ID           OUTPUT INTEGER







EXECUTE PROCEDURE PROD_PA.INSERT_INTO_PROD  (
'AA',--DESCR             INPUT (PROD_DESCR_DOM) VARCHAR(120) CHARACTER SET WIN1252
'A', --DESCR_RED         INPUT (PROD_DESCR_RED_DOM) VARCHAR(29) CHARACTER SET WIN1252
1, --FABR_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
1, --PROD_TIPO_ID      INPUT (ID_SHORT_NOTN_DOM) SMALLINT
1, --UNID_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
1, --ICMS_ID           INPUT (ID_SHORT_NOTN_DOM) SMALLINT
1.2, --CAPAC_EMB         INPUT NUMERIC(8, 3)
1, --LOJA_ID           INPUT (ID_SHORT_DOM) SMALLINT
TRUE, --ATIVO             INPUT BOOLEAN
'LO', --LOCALIZ           INPUT (NOME_CURTO_DOM) VARCHAR(15) CHARACTER SET WIN1252
2, --BAL_USO           INPUT SMALLINT
'001', --BAL_DPTO          INPUT CHAR(3) CHARACTER SET WIN1252
27, --BAL_VALIDADE_DIAS INPUT SMALLINT
'TEXTO',--BAL_TEXTO_ETIQ    INPUT VARCHAR(400) CHARACTER SET WIN1252
'78911111;78922222;78933333'
);



SET TERM ^ ;

CREATE PROCEDURE ADD_BARCODES (
    PROD_ID INTEGER,
    CODIGOS_DE_BARRA VARCHAR(2000)
)
AS
DECLARE VARIABLE ORDEM SMALLINT;
DECLARE VARIABLE COD_BARRAS CHAR(14);
DECLARE VARIABLE POSICAO INTEGER;
BEGIN
  ORDEM = 0;
  WHILE (CODIGOS_DE_BARRA <> '') DO
  BEGIN
    POSICAO = POSITION(';' IN CODIGOS_DE_BARRA);
    IF (POSICAO = 0) THEN
    BEGIN
      COD_BARRAS = TRIM(CODIGOS_DE_BARRA);
      CODIGOS_DE_BARRA = '';
    END
    ELSE
    BEGIN
      COD_BARRAS = TRIM(SUBSTRING(CODIGOS_DE_BARRA FROM 1 FOR POSICAO - 1));
      CODIGOS_DE_BARRA = SUBSTRING(CODIGOS_DE_BARRA FROM POSICAO + 1);
    END
    ORDEM = ORDEM + 1;
    INSERT INTO PROD_BARRAS (PROD_ID, ORDEM, COD_BARRAS)
    VALUES (:PROD_ID, :ORDEM, :COD_BARRAS);
  END
END^

SET TERM ; ^


SHOW PROCEDURE PROD_PA.BARCODES_GAR;
SHOW PACKAGE PROD_PA;
