CAIXA_SESSAO_MANUT_PA

-------
feature_sis arquivo
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates\000\00\00\00\dbupdate 000000032.txt
-------



-----------------------------
INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=CAIXA
DBATUALIZ_OBJETIVO=CRIAR CAIXA_SESSAO_MANUT_PA
DBATUALIZ_PONTO_ALVO=TERMINAL
DBATUALIZ_OBS=




/////////////////////////
//
// PACKAGE CAIXA_SESSAO_MANUT_PA
//
/////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=CAIXA_SESSAO_MANUT_PA
/*

C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV\CAIXA_SESSAO_MANUT_PA.sql

"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV\CAIXA_SESSAO_MANUT_PA.sql"

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV\CAIXA_SESSAO_MANUT_PA.sql";
in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV\CAIXA_SESSAO_MANUT_PA2.sql";

show procedure PERFIL_DE_USO_PA.GARANTIR;

*/
```FIREBIRD
/*
in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\PDV\CAIXA_SESSAO_MANUT_PA.sql";

*/
SET TERM ^;
CREATE OR ALTER PACKAGE CAIXA_SESSAO_MANUT_PA
AS
BEGIN
  PROCEDURE ABERTO_GET
  RETURNS
  (
    SESS_ID ID_DOM
    , PESSOA_ID ID_DOM
    , APELIDO NOME_REDU_DOM
    , ABERTO_EM TIMESTAMP
  );
  
  PROCEDURE CAIXA_SESSAO_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
  )  
  RETURNS
  (
    SESS_ID_RET ID_DOM
  );
  
  PROCEDURE OPER_ORDEM_PROXIMO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
  )
  RETURNS
  (
    OPER_ORDEM_RET SMALLINT
  );
  
  PROCEDURE OPER_TIPO_ORDEM_PROXIMO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM NOT NULL
    , OPER_TIPO_ORDEM SMALLINT
  )
  RETURNS
  (
    OPER_TIPO_ORDEM_RET SMALLINT
  );
  
  PROCEDURE QUEBRA_VALOR(PAGAMENTO_LIST VARCHAR(300))
  RETURNS (PAGAMENTO_FORMA_ID ID_DOM, PAGAMENTO_VALOR PRECO_DOM);
  
  PROCEDURE QUEBRA_NUM(NUMERARIO_LIST VARCHAR(300))
  RETURNS (NUM_VALOR NUMERARIO_DOM, NUM_QTD SMALLINT);
    
  PROCEDURE OPER_VALOR_INS 
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  );

  PROCEDURE CAIXA_SESSAO_OPERACAO_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  )  
  RETURNS
  (
    OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  );

  -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_INSERIR_DO DEF
  PROCEDURE CAIXA_SESSAO_OPERACAO_INSERIR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  )
  RETURNS
  (
    SESS_ID_RET ID_DOM
    , OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  );

  -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_DESPESA_INSERIR_DO DEF
  PROCEDURE CAIXA_SESSAO_OPERACAO_DESPESA_INSERIR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
    
    , DESPESA_TIPO_ID ID_SHORT_DOM
    , FORNEC_NOME NOME_DOM
    , NUMDOC VARCHAR(12)
    
  )
  RETURNS
  (
    SESS_ID_RET ID_DOM
    , OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  );
END^

-- BODY

RECREATE PACKAGE BODY CAIXA_SESSAO_MANUT_PA
AS
BEGIN
  PROCEDURE ABERTO_GET
  RETURNS
  (
    SESS_ID ID_DOM
    , PESSOA_ID ID_DOM
    , APELIDO NOME_REDU_DOM
    , ABERTO_EM TIMESTAMP
  )
  AS
  BEGIN
    FOR
      SELECT
      SESS.SESS_ID
      , PESS.PESSOA_ID
      , PESS.APELIDO
      , LOG.DTH ABERTO_EM
      
      FROM AMBIENTE_SIS AMBI  

      JOIN CAIXA_SESSAO SESS ON
      AMBI.LOJA_ID = SESS.LOJA_ID
      AND AMBI.TERMINAL_ID = SESS.TERMINAL_ID

      JOIN LOG ON
      SESS.LOJA_ID = LOG.LOJA_ID
      AND SESS.TERMINAL_ID = LOG.TERMINAL_ID 
      AND SESS.SESS_LOG_ID = LOG.LOG_ID 

      JOIN PESSOA PESS ON
      LOG.LOJA_ID = PESS.LOJA_ID
      AND LOG.PESSOA_TERMINAL_ID = PESS.TERMINAL_ID
      AND LOG.PESSOA_ID = PESS.PESSOA_ID

      WHERE SESS.ABERTO
    INTO  
      :SESS_ID
      , :PESSOA_ID
      , :APELIDO
      , :ABERTO_EM
    DO  
      SUSPEND;
  END
  
  PROCEDURE CAIXA_SESSAO_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
  )  
  RETURNS
  (
    SESS_ID_RET ID_DOM
  )
  AS
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- MODULO PDV
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    DECLARE SESS_FEATURE_SIS_ID ID_SHORT_DOM = 13; -- FEATURE SESSAO

    DECLARE SESS_LOG_ID BIGINT;
  BEGIN
    :SESS_ID_RET = COALESCE(SESS_ID, 0);
    
    IF (:SESS_ID_RET = 0) THEN
    BEGIN
      :SESS_ID_RET = NEXT VALUE FOR CAIXA_SESSAO_SEQ;
      
      SELECT LOG_ID_RET 
      FROM LOG_PA.LOG_NOVO_GET
      (
        :LOJA_ID,
        :TERMINAL_ID,
        :LOG_PESSOA_ID,
        :MODULO_SIS_ID,
        :ACAO_SIS_ID,
        :SESS_FEATURE_SIS_ID,
        :MACHINE_ID
      ) INTO :SESS_LOG_ID;

      EXECUTE PROCEDURE LOG_PA.LOG_ENVOLVE_ID_INS
      (
        :LOJA_ID,
        :TERMINAL_ID,
        :SESS_LOG_ID,
        0,
        
        NULL, -- LOJA_ID_ENVOLVIDO SMALLINT,
        NULL, -- TERMINAL_ID_ENVOLVIDO SMALLINT,
        :SESS_ID, -- ID_ENVOLVIDO INTEGER,
        0 -- ORDEM_ENVOLVIDO SMALLINT
      );    

      INSERT INTO CAIXA_SESSAO
      (
        LOJA_ID
        , TERMINAL_ID
        , SESS_ID
        , SESS_LOG_ID
      )
      VALUES
      (
        :LOJA_ID
        , :TERMINAL_ID
        , :SESS_ID_RET
        , :SESS_LOG_ID
      );
    END
    SUSPEND;
  END
  
  PROCEDURE OPER_ORDEM_PROXIMO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
  )
  RETURNS
  (
    OPER_ORDEM_RET SMALLINT
  )
  AS
  BEGIN
    :OPER_ORDEM_RET = COALESCE(:OPER_ORDEM, 0);
    IF (:OPER_ORDEM_RET = 0) THEN
    BEGIN
      SELECT COALESCE(MAX(OPER_ORDEM), -1) + 1 
      FROM CAIXA_SESSAO_OPERACAO
      WHERE SESS_ID = :SESS_ID
      INTO :OPER_ORDEM_RET;    
    END
    SUSPEND;
  END
  
  
  PROCEDURE OPER_TIPO_ORDEM_PROXIMO_GET
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM NOT NULL
    , OPER_TIPO_ORDEM SMALLINT
  )
  RETURNS
  (
    OPER_TIPO_ORDEM_RET SMALLINT
  )
  AS
  BEGIN
    :OPER_TIPO_ORDEM_RET = COALESCE(:OPER_TIPO_ORDEM, 0);
    IF (:OPER_TIPO_ORDEM_RET = 0) THEN
    BEGIN
      SELECT COALESCE(MAX(OPER_TIPO_ORDEM), -1) + 1 
      FROM CAIXA_SESSAO_OPERACAO
      WHERE SESS_ID = :SESS_ID
      AND OPER_TIPO_ID = :OPER_TIPO_ID
      INTO :OPER_TIPO_ORDEM_RET;
    END
    SUSPEND;
  END
  
  PROCEDURE CAIXA_SESSAO_OPERACAO_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  )  
  RETURNS
  (
    OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  )
  AS
    -- LOJA INICIAL GAR LOGVAR LOGVARS VARS LOG VAR LOG VARLOG VARSLOG
    DECLARE OPER_FEATURE_SIS_ID ID_SHORT_DOM = 14; -- FEATURE OPERACAO
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- MODULO PDV
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
  BEGIN
    -- CANCELA SE ESTA OPERACAO JA EXISTIA
    IF (:OPER_ORDEM IS NOT NULL) THEN
    BEGIN
      UPDATE CAIXA_SESSAO_OPERACAO
      SET CANCELADO = TRUE
      WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND SESS_ID = :SESS_ID
      AND OPER_ORDEM = :OPER_ORDEM;
    END
    
    -- OPER ORDEM
    SELECT OPER_ORDEM_RET
    FROM OPER_ORDEM_PROXIMO_GET
    (:LOJA_ID, :TERMINAL_ID, :SESS_ID, :OPER_ORDEM)
    INTO :OPER_ORDEM_RET;
    
    -- OPER_TIPO ORDEM
    SELECT OPER_TIPO_ORDEM_RET
    FROM OPER_TIPO_ORDEM_PROXIMO_GET
    (:LOJA_ID, :TERMINAL_ID, :SESS_ID, :OPER_ORDEM, :OPER_TIPO_ID,
    :OPER_TIPO_ORDEM)
    INTO :OPER_TIPO_ORDEM_RET;
    
    -- OPER_LOG_ID_RET
    SELECT LOG_ID_RET, DTH
    FROM LOG_PA.LOG_NOVO_GET
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_PESSOA_ID,
      :MODULO_SIS_ID,
      :ACAO_SIS_ID,
      :OPER_FEATURE_SIS_ID,
      :MACHINE_ID
    ) INTO :OPER_LOG_ID_RET, :LOG_DTH;
    
    EXECUTE PROCEDURE LOG_PA.LOG_ENVOLVE_ID_INS
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :OPER_LOG_ID_RET,
      0,
      
      NULL, -- LOJA_ID_ENVOLVIDO SMALLINT,
      NULL, -- TERMINAL_ID_ENVOLVIDO SMALLINT,
      :SESS_ID, -- ID_ENVOLVIDO INTEGER,
      :OPER_ORDEM_RET -- ORDEM_ENVOLVIDO SMALLINT
    );    
    
    -- CRIA OPERACAO
    INSERT INTO CAIXA_SESSAO_OPERACAO
    (
      LOJA_ID
      , TERMINAL_ID
      , SESS_ID
      , OPER_ORDEM
      , OPER_LOG_ID
      , OPER_TIPO_ID
      , OPER_TIPO_ORDEM
      , VALOR
      , OBS
    )
    VALUES
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :SESS_ID
      , :OPER_ORDEM_RET
      , :OPER_LOG_ID_RET
      , :OPER_TIPO_ID
      , :OPER_TIPO_ORDEM_RET
      , :VALOR
      , :OBS
    );
    SUSPEND;
  END
  
  PROCEDURE QUEBRA_VALOR(PAGAMENTO_LIST VARCHAR(300))
  RETURNS (PAGAMENTO_FORMA_ID ID_DOM, PAGAMENTO_VALOR PRECO_DOM)
  AS
    DECLARE VARIABLE I INT;
    DECLARE VARIABLE POS INT;
    DECLARE VARIABLE STR VARCHAR(300);
  BEGIN
    I = 1;
    WHILE (I <= CHAR_LENGTH(PAGAMENTO_LIST)) DO
    BEGIN
      POS = POSITION('/', SUBSTRING(PAGAMENTO_LIST FROM I FOR CHAR_LENGTH(PAGAMENTO_LIST) - I + 1));
      IF (POS = 0) THEN
        POS = CHAR_LENGTH(PAGAMENTO_LIST) - I + 2;

      STR = SUBSTRING(PAGAMENTO_LIST FROM I FOR POS - 1);
      PAGAMENTO_FORMA_ID = CAST(SUBSTRING(STR FROM 1 FOR POSITION(',' IN STR) - 1) AS ID_DOM);
      PAGAMENTO_VALOR = CAST(SUBSTRING(STR FROM POSITION(',' IN STR) + 1) AS PRECO_DOM);
      
      I = I + POS;
      SUSPEND;
    END
  END
  
  PROCEDURE QUEBRA_NUM(NUMERARIO_LIST VARCHAR(300))
  RETURNS (NUM_VALOR NUMERARIO_DOM, NUM_QTD SMALLINT)
  AS
    DECLARE VARIABLE i INT;
    DECLARE VARIABLE pos INT;
    DECLARE VARIABLE str VARCHAR(300);
  BEGIN
    i = 1;
    WHILE (i <= CHAR_LENGTH(NUMERARIO_LIST)) DO
    BEGIN
      pos = POSITION('/', SUBSTRING(NUMERARIO_LIST FROM i FOR CHAR_LENGTH(NUMERARIO_LIST) - i + 1));
      IF (pos = 0) THEN
        pos = CHAR_LENGTH(NUMERARIO_LIST) - i + 2;

      str = SUBSTRING(NUMERARIO_LIST FROM i FOR pos - 1);
      num_valor = CAST(SUBSTRING(str FROM 1 FOR POSITION('*' IN str) - 1) AS NUMERARIO_DOM);
      num_qtd = CAST(SUBSTRING(str FROM POSITION('*' IN str) + 1) AS SMALLINT);

      i = i + pos;
      SUSPEND;
    END
  END
  
  PROCEDURE OPER_VALOR_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  ) AS
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- MODULO PDV
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    DECLARE VALOR_FEATURE_SIS_ID ID_SHORT_DOM = 15; -- FEATURE CX_VALOR
  
    DECLARE VARIABLE PAGAMENTO_FORMA_ID ID_DOM;
    DECLARE VARIABLE PAGAMENTO_VALOR PRECO_DOM;
    DECLARE VARIABLE NUM_VALOR NUMERARIO_DOM;
    DECLARE VARIABLE NUM_QTD SMALLINT;
    DECLARE VARIABLE VALOR_LOG_ID BIGINT;
  BEGIN  
    FOR SELECT * FROM QUEBRA_VALOR(:PAGAMENTO_LIST)
    INTO :PAGAMENTO_FORMA_ID, :PAGAMENTO_VALOR 
    DO
    BEGIN
      SELECT LOG_ID_RET 
      FROM LOG_PA.LOG_NOVO_GET
      (
        :LOJA_ID,
        :TERMINAL_ID,
        :LOG_PESSOA_ID,
        :MODULO_SIS_ID,
        :ACAO_SIS_ID,
        :VALOR_FEATURE_SIS_ID,
        :MACHINE_ID
      ) INTO :VALOR_LOG_ID;
      
      INSERT INTO CAIXA_SESSAO_OPERACAO_VALOR 
      (
        LOJA_ID, TERMINAL_ID, SESS_ID, OPER_ORDEM,OPER_LOG_ID, VALOR_LOG_ID,
        PAGAMENTO_FORMA_ID, VALOR
      )
      VALUES 
      (
        :LOJA_ID, :TERMINAL_ID, :SESS_ID, :OPER_ORDEM, :OPER_LOG_ID,
        :VALOR_LOG_ID, :PAGAMENTO_FORMA_ID, :PAGAMENTO_VALOR
      );
      
      IF (:PAGAMENTO_FORMA_ID = 1) THEN
      BEGIN
        FOR SELECT * FROM QUEBRA_NUM(:NUMERARIO_LIST)
        INTO :NUM_VALOR, :NUM_QTD
        DO
        BEGIN
          INSERT INTO CAIXA_SESSAO_OPERACAO_VALOR_NUMERARIO (
            LOJA_ID, TERMINAL_ID, SESS_ID, OPER_ORDEM, OPER_LOG_ID,
            VALOR_LOG_ID, VALOR, QTD
          ) VALUES (
            :LOJA_ID, :TERMINAL_ID, :SESS_ID, :OPER_ORDEM, :OPER_LOG_ID, 
            :VALOR_LOG_ID, :NUM_VALOR, :NUM_QTD
          );
        END
      END
    END
  END
  
  -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_INSERIR_DO IMP
  PROCEDURE CAIXA_SESSAO_OPERACAO_INSERIR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
  )
  RETURNS
  (
    SESS_ID_RET ID_DOM
    , OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  )
  AS    
  BEGIN
    -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_INSERIR_DO COD

    -- SESSAO SESS_ID -> SESS_ID_RET
    SELECT SESS_ID_RET
    FROM CAIXA_SESSAO_INS(:LOJA_ID, :TERMINAL_ID, :SESS_ID, :LOG_PESSOA_ID,
      :MACHINE_ID)
    INTO :SESS_ID_RET;
    
    SELECT OPER_ORDEM_RET, OPER_LOG_ID_RET, OPER_TIPO_ORDEM_RET, LOG_DTH
    FROM CAIXA_SESSAO_OPERACAO_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :SESS_ID_RET
      , :OPER_ORDEM
      , :OPER_TIPO_ID
      , :OPER_LOG_ID
      , :OPER_TIPO_ORDEM
      , :VALOR
      , :OBS
      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :PAGAMENTO_LIST
      , :NUMERARIO_LIST
    )
    INTO :OPER_ORDEM_RET, :OPER_LOG_ID_RET, :OPER_TIPO_ORDEM_RET, :LOG_DTH;
    
    
    EXECUTE PROCEDURE OPER_VALOR_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :SESS_ID_RET
      , :OPER_ORDEM_RET
      , :OPER_TIPO_ID
      , :OPER_LOG_ID_RET
      , :OPER_TIPO_ORDEM_RET
      , :VALOR
      , :OBS
      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :PAGAMENTO_LIST
      , :NUMERARIO_LIST
    );

    IF (:OPER_TIPO_ID = '(') THEN
    BEGIN
      UPDATE CAIXA_SESSAO
      SET ABERTO = FALSE
      WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND SESS_ID = :SESS_ID;
    END

    SUSPEND;    
  END

  -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_DESPESA_INSERIR_DO IMP
  PROCEDURE CAIXA_SESSAO_OPERACAO_DESPESA_INSERIR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , TERMINAL_ID ID_SHORT_DOM NOT NULL
    , SESS_ID ID_DOM
    , OPER_ORDEM SMALLINT
    , OPER_TIPO_ID ID_CHAR_DOM Not Null
    , OPER_LOG_ID BIGINT
    , OPER_TIPO_ORDEM SMALLINT
    , VALOR PRECO_DOM Not Null
    , OBS OBS_DOM
    , LOG_PESSOA_ID ID_DOM
    , MACHINE_ID ID_SHORT_DOM
    , PAGAMENTO_LIST VARCHAR(300)
    , NUMERARIO_LIST VARCHAR(300)    
    
    , DESPESA_TIPO_ID ID_SHORT_DOM
    , FORNEC_NOME NOME_DOM
    , NUMDOC VARCHAR(12)
    
  )
  RETURNS
  (
    SESS_ID_RET ID_DOM
    , OPER_ORDEM_RET SMALLINT
    , OPER_LOG_ID_RET BIGINT
    , OPER_TIPO_ORDEM_RET SMALLINT
    , LOG_DTH TIMESTAMP
  )
  AS
  BEGIN
    -- CAIXA_SESSAO_MANUT_PA.CAIXA_SESSAO_OPERACAO_DESPESA_INSERIR_DO COD
    SELECT 
      SESS_ID_RET
      , OPER_ORDEM_RET
      , OPER_LOG_ID_RET
      , OPER_TIPO_ORDEM_RET
      , LOG_DTH
    FROM CAIXA_SESSAO_OPERACAO_INSERIR_DO
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :SESS_ID
      , :OPER_ORDEM
      , :OPER_TIPO_ID
      , :OPER_LOG_ID
      , :OPER_TIPO_ORDEM
      , :VALOR
      , :OBS
      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :PAGAMENTO_LIST
      , :NUMERARIO_LIST
    )
    INTO 
      :SESS_ID_RET
      , :OPER_ORDEM_RET
      , :OPER_LOG_ID_RET
      , :OPER_TIPO_ORDEM_RET
      , :LOG_DTH;
    SUSPEND;
    
    INSERT INTO CAIXA_SESSAO_OPERACAO_DESPESA
    (
      LOJA_ID
      , TERMINAL_ID
      , SESS_ID
      , OPER_ORDEM
      , OPER_LOG_ID
      , DESPESA_TIPO_ID
      , FORNEC_NOME
      , NUMDOC
    )
    VALUES
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :SESS_ID
      , :OPER_ORDEM
      , :OPER_LOG_ID
      , :DESPESA_TIPO_ID
      , :FORNEC_NOME
      , :NUMDOC
    );    
  END  
END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
