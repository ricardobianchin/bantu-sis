ENTRADA_PA



SELECT DBUPDATE_PA.VERSAO_GET() FROM RDB$DATABASE;

show package ENTRADA_PA;

DROP PACKAGE ENTRADA_PA;
DELETE FROM DBUPDATE_HIST WHERE NUM>=116;
COMMIT;



/*

C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\ENTRADA_PA.sql

"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\ENTRADA_PA.sql"

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\ENTRADA_PA.sql";




"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates\000\00\00\00\dbupdate 000000109.txt"

*/





-----------------------------
INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=ESTOQUE
DBATUALIZ_OBJETIVO=CRIAR ENTRADA_PA
DBATUALIZ_PONTO_ALVO=SERVIDOR
DBATUALIZ_OBS=




/////////////////////////
//
// PACKAGE ENTRADA_PA
//
/////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=ENTRADA_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE ENTRADA_PA
AS
BEGIN
  -- ENTRADA_PA.LISTA_GET DEF
  PROCEDURE LISTA_GET
  (
    CRIADO_EM_INICIAL TIMESTAMP NOT NULL,
    CRIADO_EM_FINAL TIMESTAMP NOT NULL
  )
  RETURNS
  (
    LOJA_ID                         ID_SHORT_DOM,
    TERMINAL_ID                     ID_SHORT_DOM,
    EST_MOV_ID                      BIGINT,

    ENTRADA_ID                      ID_DOM,

    COD                             VARCHAR(20),
    NDOC                            INTEGER,
    SERIE                           SMALLINT,
    --DTH_DOC                         TIMESTAMP,

    FORNECEDOR_ID                   ID_DOM,
    FORNECEDOR_APELIDO              NOME_INTERM_DOM,

    CRIADO_EM                       TIMESTAMP,

    FINALIZADO                      BOOLEAN,
    FINALIZADO_EM                   TIMESTAMP,

    CANCELADO                       BOOLEAN,
    --ALTERADO_EM                     TIMESTAMP,
    CANCELADO_EM                    TIMESTAMP,
    
    CRIADO_POR_ID                   ID_DOM,
    CRIADO_POR_APELIDO              NOME_REDU_DOM,
    CANCELADO_POR_ID                ID_DOM,
    CANCELADO_POR_APELIDO           NOME_REDU_DOM,
    FINALIZADO_POR_ID               ID_DOM,
    FINALIZADO_POR_APELIDO          NOME_REDU_DOM
  );

  /*
  usuario nao chama ins do cabecalho
  nao chama ENTRADA_INS
  ao inves, chama ins do item,
  ENTRADA_ITEM_INS.
  o ins do item verifica se precisa
  e cria cabecalho  
  */
  -- ENTRADA_PA.ENTRADA_INS DEF
  PROCEDURE ENTRADA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , ENTRADA_ID ID_DOM NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL
    , FORNECEDOR_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    ENTRADA_ID_RET ID_DOM
  );
  
  -- ENTRADA_PA.ENTRADA_ITEM_INS DEF
  PROCEDURE ENTRADA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , ENTRADA_ID ID_DOM NOT NULL

    , NITEM SMALLINT NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL
    , FORNECEDOR_ID ID_DOM NOT NULL

    , PROD_ID_DELES FORNEC_PROD_ID_DOM NOT NULL

    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , CUSTO CUSTO_DOM NOT NULL
    , MARGEM MARGEM_DOM NOT NULL
    , PRECO PRECO_DOM NOT NULL

    , LOG_STR VARCHAR(200) NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , ENTRADA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  );

  -- ENTRADA_PA.ALTERAR_DO DEF
  PROCEDURE ALTERAR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL

    , FORNECEDOR_ID ID_DOM NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  );


  PROCEDURE ENTRADA_FINALIZE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    , MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    FINALIZADO_EM_RET TIMESTAMP
  );
  
END^

----- BODY

RECREATE PACKAGE BODY ENTRADA_PA
AS
BEGIN
  -- ENTRADA_PA.LISTA_GET IMP
  PROCEDURE LISTA_GET
  (
    CRIADO_EM_INICIAL TIMESTAMP NOT NULL,
    CRIADO_EM_FINAL TIMESTAMP NOT NULL
  )
  RETURNS
  (
    LOJA_ID                         ID_SHORT_DOM,
    TERMINAL_ID                     ID_SHORT_DOM,
    EST_MOV_ID                      BIGINT,

    ENTRADA_ID                      ID_DOM,

    COD                             VARCHAR(20),
    NDOC                            INTEGER,
    SERIE                           SMALLINT,
    --DTH_DOC                         TIMESTAMP,

    FORNECEDOR_ID                   ID_DOM,
    FORNECEDOR_APELIDO              NOME_INTERM_DOM,

    CRIADO_EM                       TIMESTAMP,

    FINALIZADO                      BOOLEAN,
    FINALIZADO_EM                   TIMESTAMP,

    CANCELADO                       BOOLEAN,
    --ALTERADO_EM                     TIMESTAMP,
    CANCELADO_EM                    TIMESTAMP,
    
    CRIADO_POR_ID                   ID_DOM,
    CRIADO_POR_APELIDO              NOME_REDU_DOM,
    CANCELADO_POR_ID                ID_DOM,
    CANCELADO_POR_APELIDO           NOME_REDU_DOM,
    FINALIZADO_POR_ID               ID_DOM,
    FINALIZADO_POR_APELIDO          NOME_REDU_DOM
  )
  AS
  BEGIN
    -- ENTRADA_PA.LISTA_GET COD
    FOR SELECT
      EM.LOJA_ID,
      EM.TERMINAL_ID,
      EM.EST_MOV_ID,
      EN.ENTRADA_ID,
      '' COD,
      EN.NDOC,
      EN.SERIE,
      
      --EM.DTH_DOC,
      
      P.PESSOA_ID FORNECEDOR_ID,
      P.APELIDO FORNECEDOR_APELIDO,

      EM.CRIADO_EM,

      EM.FINALIZADO,
      EM.FINALIZADO_EM,

      EM.CANCELADO,
      --EM.ALTERADO_EM,
      EM.CANCELADO_EM,
      
      0 CRIADO_POR_ID,
      '' CRIADO_POR_APELIDO,

      0 CANCELADO_POR_ID,
      '' CANCELADO_POR_APELIDO,

      0 FINALIZADO_POR_ID,
      '' FINALIZADO_POR_APELIDO
      
    FROM EST_MOV EM
    INNER JOIN ENTRADA EN
      ON EN.LOJA_ID = EM.LOJA_ID
      AND EN.TERMINAL_ID = EM.TERMINAL_ID
      AND EN.EST_MOV_ID = EM.EST_MOV_ID
    INNER JOIN PESSOA P ON
      P.PESSOA_ID = EN.FORNECEDOR_ID
    WHERE
      (
        :CRIADO_EM_INICIAL = '01.01.1900' OR
        EM.CRIADO_EM >= :CRIADO_EM_INICIAL
      )
      AND
      (
        :CRIADO_EM_FINAL = '01.01.1900' OR
        EM.CRIADO_EM <= :CRIADO_EM_FINAL
      )
      ORDER BY ENTRADA_ID DESC, LOJA_ID
    INTO
      :LOJA_ID,
      :TERMINAL_ID,
      :EST_MOV_ID,
      :ENTRADA_ID,
      :COD,
      :NDOC,
      :SERIE,

      --:DTH_DOC,

      :FORNECEDOR_ID,
      :FORNECEDOR_APELIDO,

      :CRIADO_EM,

      :FINALIZADO,
      :FINALIZADO_EM,

      :CANCELADO,
      --:ALTERADO_EM,
      :CANCELADO_EM,

      :CRIADO_POR_ID,
      :CRIADO_POR_APELIDO,

      :CANCELADO_POR_ID,
      :CANCELADO_POR_APELIDO,

      :FINALIZADO_POR_ID,
      :FINALIZADO_POR_APELIDO
    DO
      SUSPEND;
  END

  PROCEDURE ENTRADA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , ENTRADA_ID ID_DOM NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL
    , FORNECEDOR_ID ID_DOM NOT NULL
  )
  RETURNS
  (
    ENTRADA_ID_RET ID_DOM
  )
  AS
  BEGIN
    :ENTRADA_ID_RET = COALESCE(:ENTRADA_ID, 0);
    IF (:ENTRADA_ID_RET = 0) THEN
    BEGIN
      :ENTRADA_ID_RET = NEXT VALUE FOR ENTRADA_SEQ;
      INSERT INTO ENTRADA
      (
        LOJA_ID
        , TERMINAL_ID
        , EST_MOV_ID
        , ENTRADA_ID
        , NDOC
        , SERIE
        , FORNECEDOR_ID
      )
      VALUES
      (
        :LOJA_ID
        , 0 --:TERMINAL_ID
        , :EST_MOV_ID
        , :ENTRADA_ID_RET
        , :NDOC
        , :SERIE
        , :FORNECEDOR_ID
      );
    END
    SUSPEND;
  END
  
  -- ENTRADA_PA.ENTRADA_ITEM_INS IMP
  PROCEDURE ENTRADA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , ENTRADA_ID ID_DOM NOT NULL
    
    , NITEM SMALLINT NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL
    , FORNECEDOR_ID ID_DOM NOT NULL

    , PROD_ID_DELES FORNEC_PROD_ID_DOM NOT NULL
    
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    , CUSTO CUSTO_DOM NOT NULL
    , MARGEM MARGEM_DOM NOT NULL
    , PRECO PRECO_DOM NOT NULL
  
    , LOG_STR VARCHAR(200) NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , ENTRADA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  )
  AS
    -- ENTRADA_PA ENTRADA_ITEM_INS LOGVAR LOGVARS VARS LOG VAR LOG VARLOG VARSLOG
    --DECLARE FEATURE_SIS_ID ID_SHORT_DOM = 17; -- EST_MOV
    DECLARE TERMINAL_ID ID_SHORT_DOM = 0; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '!'; -- CONFIG
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '"'; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- PDV
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    --DECLARE ACAO_SIS_ID ID_CHAR_DOM = '&'; -- ALTERAR
    DECLARE LOG_ID_RET BIGINT;
    DECLARE ORDEM_ANTIGA SMALLINT;
    DECLARE CANCELADO_EM_RET TIMESTAMP;
  BEGIN
    -- ENTRADA_PA.ENTRADA_ITEM_INS DEF
    
    LOG_STR_RET = LOG_STR;

    SELECT MAX(EMI.ORDEM)
      FROM EST_MOV_ITEM EMI
      JOIN ENTRADA_ITEM ENI ON
        ENI.LOJA_ID = EMI.LOJA_ID
        AND ENI.TERMINAL_ID = EMI.TERMINAL_ID
        AND ENI.EST_MOV_ID = EMI.EST_MOV_ID
      WHERE ENI.LOJA_ID = :LOJA_ID
        AND ENI.TERMINAL_ID = :TERMINAL_ID
        AND ENI.EST_MOV_ID = :EST_MOV_ID
        AND ENI.NITEM = :NITEM
        AND NOT EMI.CANCELADO
      INTO :ORDEM_ANTIGA;

    :ORDEM_ANTIGA = COALESCE(:ORDEM_ANTIGA, -1);

    IF (:ORDEM_ANTIGA >= 0) THEN
    BEGIN
      SELECT CANCELADO_EM_RET FROM EST_MOV_MANUT_PA.EST_MOV_ITEM_CANCELE
      (
        :LOJA_ID
        , :TERMINAL_ID
        , :EST_MOV_ID
        , :ORDEM_ANTIGA

        , :LOG_PESSOA_ID
        , :MACHINE_ID
        , :MODULO_SIS_ID
      ) INTO :CANCELADO_EM_RET;
    END

    SELECT EST_MOV_ID_RET, DTH_DOC_RET, EST_MOV_CRIADO_EM_RET,
      EST_MOV_ITEM_CRIADO_EM_RET, ORDEM_RET
    FROM EST_MOV_MANUT_PA.EST_MOV_ITEM_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID
      , '!' -- EST_MOV_TIPO_ID #33 ENTRADA
      , '01.01.1900' -- EST_MOV_DTH_DOC
      , '01.01.1900' -- EST_MOV_CRIADO_EM
      , :PROD_ID
      , :QTD
      
      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :MODULO_SIS_ID        
    )
    INTO :EST_MOV_ID_RET, :DTH_DOC_RET, :EST_MOV_CRIADO_EM_RET,
      :EST_MOV_ITEM_CRIADO_EM_RET, :ORDEM_RET;
    
    
    :LOG_STR_RET = :LOG_STR_RET ||';EST_MOV_ID_RET='||:EST_MOV_ID_RET;
    :LOG_STR_RET = :LOG_STR_RET ||';ORDEM_RET='||:ORDEM_RET;
    SELECT ENTRADA_ID_RET FROM ENTRADA_INS
    (
      :LOJA_ID
      --, :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :ENTRADA_ID
      , :NDOC
      , :SERIE
      , :FORNECEDOR_ID
    )
    INTO :ENTRADA_ID_RET;
    
    :LOG_STR_RET = :LOG_STR_RET ||';ENTRADA_ID_RET='||:ENTRADA_ID_RET;
    
    INSERT INTO ENTRADA_ITEM
    (
      LOJA_ID
      , TERMINAL_ID
      , EST_MOV_ID
      , ORDEM
      , NITEM
      , CUSTO
      , MARGEM
      , PRECO
      , PROD_ID_DELES
    )
    VALUES
    (
      :LOJA_ID
      , 0 -- :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :ORDEM_RET
      , :NITEM
      , :CUSTO
      , :MARGEM
      , :PRECO
      , :PROD_ID_DELES
    );
    SUSPEND;
  END

  -- ENTRADA_PA.ALTERAR_DO IMP
  PROCEDURE ALTERAR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    
    , FORNECEDOR_ID ID_DOM NOT NULL
    , NDOC INTEGER NOT NULL
    , SERIE SMALLINT NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  AS
    -- ENTRADA_PA ALTERAR_DO LOGVAR LOGVARS VARS LOG VAR LOG VARLOG VARSLOG
    DECLARE FEATURE_SIS_ID ID_SHORT_DOM = 17; -- EST_MOV
    DECLARE TERMINAL_ID ID_SHORT_DOM = 0; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '!'; -- CONFIG
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '"'; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- PDV
    --DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '&'; -- ALTERAR
    DECLARE LOG_ID_RET BIGINT;
  BEGIN
    -- ENTRADA_PA.ALTERAR_DO COD
    
    SELECT LOG_ID_RET FROM LOG_PA.LOG_NOVO_GET
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_PESSOA_ID,
      :MODULO_SIS_ID,
      :ACAO_SIS_ID,
      :FEATURE_SIS_ID,
      :MACHINE_ID
    ) INTO :LOG_ID_RET;

    EXECUTE PROCEDURE LOG_PA.LOG_ENVOLVE_ID_INS
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_ID_RET,
      0, -- LOG_ORDEM

      :LOJA_ID, -- LOJA_ID_ENVOLVIDO SMALLINT,
      :TERMINAL_ID, -- TERMINAL_ID_ENVOLVIDO SMALLINT,
      :EST_MOV_ID, -- ID_ENVOLVIDO INTEGER,
      0 -- ORDEM_ENVOLVIDO SMALLINT
    );

    UPDATE ENTRADA SET
      FORNECEDOR_ID = :FORNECEDOR_ID
      , NDOC = :NDOC
      , SERIE = :SERIE
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID;
  END

  PROCEDURE ENTRADA_FINALIZE
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    , MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    FINALIZADO_EM_RET TIMESTAMP
  )
  AS
    DECLARE FORNECEDOR_ID ID_DOM;
    DECLARE PROD_ID_DELES FORNEC_PROD_ID_DOM;
    DECLARE PROD_ID ID_DOM;  
    DECLARE TERMINAL_ID ID_SHORT_DOM = 0; -- TERMINAL_ID RETAGUARDA
    DECLARE ORDEM SMALLINT;
    DECLARE CUSTO CUSTO_DOM;
    DECLARE MARGEM MARGEM_DOM;
    DECLARE PRECO PRECO_DOM;
    DECLARE LOG_ID_RET BIGINT;
  BEGIN
    SELECT FINALIZADO_EM_RET
    FROM EST_MOV_MANUT_PA.EST_MOV_FINALIZE
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID

      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :MODULO_SIS_ID
    )
    INTO :FINALIZADO_EM_RET;

    SUSPEND;

    FOR SELECT 
        E.FORNECEDOR_ID,
        EMI.ORDEM,
        EI.PROD_ID_DELES,
        EMI.PROD_ID,
        EI.CUSTO,
        EI.MARGEM,
        EI.PRECO

    FROM ENTRADA E
    JOIN EST_MOV_ITEM EMI ON
        E.LOJA_ID = EMI.LOJA_ID
        AND E.TERMINAL_ID = EMI.TERMINAL_ID
        AND E.EST_MOV_ID = EMI.EST_MOV_ID
    JOIN ENTRADA_ITEM EI ON
        EMI.LOJA_ID = EI.LOJA_ID
        AND EMI.TERMINAL_ID = EI.TERMINAL_ID
        AND EMI.EST_MOV_ID = EI.EST_MOV_ID
        AND EMI.ORDEM = EI.ORDEM
    WHERE E.LOJA_ID = :LOJA_ID
        AND E.TERMINAL_ID = :TERMINAL_ID
        AND E.EST_MOV_ID = :EST_MOV_ID
        AND NOT EMI.CANCELADO
    ORDER BY EMI.ORDEM
    INTO :FORNECEDOR_ID, :ORDEM, :PROD_ID_DELES, :PROD_ID, 
      :CUSTO, :MARGEM, :PRECO
    DO
    BEGIN
      UPDATE PROD_COMPL PC SET 
      PC.MARGEM = :MARGEM
      WHERE PC.PROD_ID = :PROD_ID
        AND PC.LOJA_ID = :LOJA_ID
        AND PC.MARGEM <> :MARGEM
        ;

    EXECUTE PROCEDURE PROD_CUSTO_PA.PROD_CUSTO_HIST_INS(
      :PROD_ID, :LOJA_ID, :LOG_PESSOA_ID, :MACHINE_ID, :CUSTO, :EST_MOV_ID, :ORDEM
      ) RETURNING_VALUES :LOG_ID_RET;

    EXECUTE PROCEDURE PROD_PRECO_PA.PROD_PRECO_HIST_INS(
      :PROD_ID, :LOJA_ID, :LOG_PESSOA_ID, :MACHINE_ID, :PRECO
      ) RETURNING_VALUES :LOG_ID_RET;

      EXECUTE PROCEDURE FORNECEDOR_PROD_PA.PREENCHA_DO_EST_MOV
      (
        :LOJA_ID,
        :FORNECEDOR_ID,
        :PROD_ID_DELES,
        :PROD_ID
      );
    END
  END

END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
