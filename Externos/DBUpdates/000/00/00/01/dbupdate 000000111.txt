EST_SAIDA_PA


"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates\000\00\00\00\dbupdate 000000109.txt"

SELECT DBUPDATE_PA.VERSAO_GET() FROM RDB$DATABASE;

show package EST_SAIDA_PA;

DROP PACKAGE EST_SAIDA_PA;
DELETE FROM DBUPDATE_HIST WHERE NUM>=111;
COMMIT;



/*

C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque
C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\EST_SAIDA_PA.sql

"C:\Program Files\Notepad++\notepad++.exe" "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\EST_SAIDA_PA.sql"

in "C:\Pr\app\bantu\bantu-sis\Src\Externos\DBUpdates Complementos\Complementos\Estoque\EST_SAIDA_PA.sql";


*/





-----------------------------
INICIO
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=ESTOQUE
DBATUALIZ_OBJETIVO=CRIAR EST_SAIDA_PA
DBATUALIZ_PONTO_ALVO=SERVIDOR
DBATUALIZ_OBS=




/////////////////////////
//
// PACKAGE EST_SAIDA_PA
//
/////////////////////////
COMANDO INI
COMANDO_TIPO=CREATE OR ALTER PACKAGE
OBJETO_NOME=EST_SAIDA_PA

```FIREBIRD
SET TERM ^;
CREATE OR ALTER PACKAGE EST_SAIDA_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  (
    CRIADO_EM_INICIAL TIMESTAMP NOT NULL,
    CRIADO_EM_FINAL TIMESTAMP NOT NULL
  )
  RETURNS
  (
    LOJA_ID                         ID_SHORT_DOM,
    TERMINAL_ID                     ID_SHORT_DOM,
    EST_MOV_ID                      BIGINT,
    EST_SAIDA_ID                    ID_DOM,
    COD                             VARCHAR(20),
    --DTH_DOC                         TIMESTAMP,
    CRIADO_EM                       TIMESTAMP,
    EST_SAIDA_MOTIVO_ID             ID_SHORT_DOM,
    EST_SAIDA_NOME                  NOME_INTERM_DOM,
    FINALIZADO                      BOOLEAN,
    FINALIZADO_EM                   TIMESTAMP,
    CANCELADO                       BOOLEAN,
    --ALTERADO_EM                     TIMESTAMP,
    CANCELADO_EM                    TIMESTAMP,
    CRIADO_POR_ID                   ID_DOM,
    CRIADO_POR_APELIDO              NOME_REDU_DOM,
    CANCELADO_POR_ID                ID_DOM,
    CANCELADO_POR_APELIDO           NOME_REDU_DOM,
    FINALIZADO_POR_ID               ID_DOM,
    FINALIZADO_POR_APELIDO          NOME_REDU_DOM
  );
  
  /*
  usuario nao chama ins do cabecalho
  nao chama EST_SAIDA_INS
  ao inves, chama ins do item,
  EST_SAIDA_ITEM_INS.
  o ins do item verifica se precisa
  e cria cabecalho  
  */
  PROCEDURE EST_SAIDA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , EST_SAIDA_ID ID_DOM
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL
  )
  RETURNS
  (
    EST_SAIDA_ID_RET ID_DOM
  );
  
  -- EST_SAIDA_PA.EST_SAIDA_ITEM_INS DEF
  PROCEDURE EST_SAIDA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , EST_SAIDA_ID ID_DOM NOT NULL
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL
    
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    
    , LOG_STR VARCHAR(200) NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , EST_SAIDA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  );

  -- EST_SAIDA_PA.ALTERAR_DO DEF
  PROCEDURE ALTERAR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  );
END^

----- BODY

RECREATE PACKAGE BODY EST_SAIDA_PA
AS
BEGIN
  PROCEDURE LISTA_GET
  (
    CRIADO_EM_INICIAL TIMESTAMP NOT NULL,
    CRIADO_EM_FINAL TIMESTAMP NOT NULL
  )
  RETURNS
  (
    LOJA_ID                         ID_SHORT_DOM,
    TERMINAL_ID                     ID_SHORT_DOM,
    EST_MOV_ID                      BIGINT,
    EST_SAIDA_ID                    ID_DOM,
    COD                             VARCHAR(20),

    --DTH_DOC                         TIMESTAMP,

    CRIADO_EM                       TIMESTAMP,

    EST_SAIDA_MOTIVO_ID             ID_SHORT_DOM,
    EST_SAIDA_NOME                  NOME_INTERM_DOM,

    FINALIZADO                      BOOLEAN,
    FINALIZADO_EM                   TIMESTAMP,

    CANCELADO                       BOOLEAN,
    --ALTERADO_EM                     TIMESTAMP,
    CANCELADO_EM                    TIMESTAMP,

    CRIADO_POR_ID                   ID_DOM,
    CRIADO_POR_APELIDO              NOME_REDU_DOM,

    CANCELADO_POR_ID                ID_DOM,
    CANCELADO_POR_APELIDO           NOME_REDU_DOM,

    FINALIZADO_POR_ID               ID_DOM,
    FINALIZADO_POR_APELIDO          NOME_REDU_DOM
  )
  AS
  BEGIN
    FOR SELECT
      EM.LOJA_ID,
      EM.TERMINAL_ID,
      EM.EST_MOV_ID,
      ES.EST_SAIDA_ID,
      '' COD,
      
      --EM.DTH_DOC,
      
      EM.CRIADO_EM,
      
      ESM.EST_SAIDA_MOTIVO_ID,
      ESM.NOME,

      EM.FINALIZADO,
      EM.FINALIZADO_EM,

      EM.CANCELADO,
      --EM.ALTERADO_EM,
      EM.CANCELADO_EM,
      
      0 CRIADO_POR_ID,
      '' CRIADO_POR_APELIDO,

      0 CANCELADO_POR_ID,
      '' CANCELADO_POR_APELIDO,

      0 FINALIZADO_POR_ID,
      '' FINALIZADO_POR_APELIDO
      
    FROM EST_MOV EM
    INNER JOIN EST_SAIDA ES
      ON ES.LOJA_ID = EM.LOJA_ID
      AND ES.TERMINAL_ID = EM.TERMINAL_ID
      AND ES.EST_MOV_ID = EM.EST_MOV_ID
    INNER JOIN EST_SAIDA_MOTIVO ESM
      ON ESM.EST_SAIDA_MOTIVO_ID = ES.EST_SAIDA_MOTIVO_ID
    WHERE
      (
        :CRIADO_EM_INICIAL = '01.01.1900' OR
        EM.CRIADO_EM >= :CRIADO_EM_INICIAL
      )
      AND
      (
        :CRIADO_EM_FINAL = '01.01.1900' OR
        EM.CRIADO_EM <= :CRIADO_EM_FINAL
      )
    INTO
      :LOJA_ID,
      :TERMINAL_ID,
      :EST_MOV_ID,
      :EST_SAIDA_ID,
      :COD,

      --:DTH_DOC,

      :CRIADO_EM,

      :EST_SAIDA_MOTIVO_ID,
      :EST_SAIDA_NOME,

      :FINALIZADO,
      :FINALIZADO_EM,

      :CANCELADO,
      --:ALTERADO_EM,
      :CANCELADO_EM,

      :CRIADO_POR_ID,
      :CRIADO_POR_APELIDO,

      :CANCELADO_POR_ID,
      :CANCELADO_POR_APELIDO,

      :FINALIZADO_POR_ID,
      :FINALIZADO_POR_APELIDO
    DO
      SUSPEND;
  END

  PROCEDURE EST_SAIDA_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT NOT NULL
    , EST_SAIDA_ID ID_DOM
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL
  )
  RETURNS
  (
    EST_SAIDA_ID_RET ID_DOM
  )
  AS
  BEGIN
    :EST_SAIDA_ID_RET = COALESCE(:EST_SAIDA_ID, 0);
    IF (:EST_SAIDA_ID_RET = 0) THEN
    BEGIN
      :EST_SAIDA_ID_RET = NEXT VALUE FOR EST_SAIDA_SEQ;
      INSERT INTO EST_SAIDA
      (
        LOJA_ID
        , TERMINAL_ID
        , EST_MOV_ID
        , EST_SAIDA_ID
        , EST_SAIDA_MOTIVO_ID
      )
      VALUES
      (
        :LOJA_ID
        , 0 --:TERMINAL_ID
        , :EST_MOV_ID
        , :EST_SAIDA_ID_RET
        , :EST_SAIDA_MOTIVO_ID
      );
    END
    SUSPEND;
  END
  
  -- EST_SAIDA_PA.EST_SAIDA_ITEM_INS IMP
  PROCEDURE EST_SAIDA_ITEM_INS
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , EST_SAIDA_ID ID_DOM NOT NULL
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL
    
    , PROD_ID ID_DOM NOT NULL
    , QTD QTD_DOM NOT NULL
    
    , LOG_STR VARCHAR(200) NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  RETURNS
  (
    EST_MOV_ID_RET BIGINT
    , DTH_DOC_RET TIMESTAMP
    , EST_MOV_CRIADO_EM_RET TIMESTAMP
    , EST_MOV_ITEM_CRIADO_EM_RET TIMESTAMP
    
    , EST_SAIDA_ID_RET ID_DOM
    , ORDEM_RET SMALLINT
    , LOG_STR_RET VARCHAR(200)
  )
  AS
    -- EST_SAIDA_PA EST_SAIDA_ITEM_INS LOGVAR LOGVARS VARS LOG VAR LOG VARLOG VARSLOG
    --DECLARE FEATURE_SIS_ID ID_SHORT_DOM = 17; -- EST_MOV
    DECLARE TERMINAL_ID ID_SHORT_DOM = 0; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '!'; -- CONFIG
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '"'; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- PDV
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    --DECLARE ACAO_SIS_ID ID_CHAR_DOM = '&'; -- ALTERAR
    DECLARE LOG_ID_RET BIGINT;
  BEGIN
    -- EST_SAIDA_PA.EST_SAIDA_ITEM_INS DEF
    
    LOG_STR_RET = LOG_STR;

    SELECT EST_MOV_ID_RET, DTH_DOC_RET, EST_MOV_CRIADO_EM_RET,
      EST_MOV_ITEM_CRIADO_EM_RET, ORDEM_RET
    FROM EST_MOV_MANUT_PA.EST_MOV_ITEM_INS
    (
      :LOJA_ID
      , :TERMINAL_ID
      , :EST_MOV_ID
      , '&' -- EST_MOV_TIPO_ID #38 EST_SAIDA
      , '01.01.1900' -- EST_MOV_DTH_DOC
      , '01.01.1900' -- EST_MOV_CRIADO_EM
      , :PROD_ID
      , :QTD
      
      , :LOG_PESSOA_ID
      , :MACHINE_ID
      , :MODULO_SIS_ID        
    )
    INTO :EST_MOV_ID_RET, :DTH_DOC_RET, :EST_MOV_CRIADO_EM_RET,
      :EST_MOV_ITEM_CRIADO_EM_RET, :ORDEM_RET;
    
    
    :LOG_STR_RET = :LOG_STR_RET ||';EST_MOV_ID_RET='||:EST_MOV_ID_RET;
    :LOG_STR_RET = :LOG_STR_RET ||';ORDEM_RET='||:ORDEM_RET;
    SELECT EST_SAIDA_ID_RET FROM EST_SAIDA_INS
    (
      :LOJA_ID
      --, :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :EST_SAIDA_ID
      , :EST_SAIDA_MOTIVO_ID
    )
    INTO :EST_SAIDA_ID_RET;
    
    :LOG_STR_RET = :LOG_STR_RET ||';EST_SAIDA_ID_RET='||:EST_SAIDA_ID_RET;
    
    INSERT INTO EST_SAIDA_ITEM
    (
      LOJA_ID
      , TERMINAL_ID
      , EST_MOV_ID
      , ORDEM
    )
    VALUES
    (
      :LOJA_ID
      , 0 -- :TERMINAL_ID
      , :EST_MOV_ID_RET
      , :ORDEM_RET
    );
    SUSPEND;
  END

  -- EST_SAIDA_PA.ALTERAR_DO IMP
  PROCEDURE ALTERAR_DO
  (
    LOJA_ID ID_SHORT_DOM NOT NULL
    --, TERMINAL_ID ID_SHORT_DOM NOT NULL
    , EST_MOV_ID BIGINT
    
    , EST_SAIDA_MOTIVO_ID ID_SHORT_DOM NOT NULL

    , LOG_PESSOA_ID ID_DOM NOT NULL
    , MACHINE_ID ID_SHORT_DOM NOT NULL
    --, MODULO_SIS_ID ID_CHAR_DOM NOT NULL
  )
  AS
    -- EST_SAIDA_PA ALTERAR_DO LOGVAR LOGVARS VARS LOG VAR LOG VARLOG VARSLOG
    DECLARE FEATURE_SIS_ID ID_SHORT_DOM = 17; -- EST_MOV
    DECLARE TERMINAL_ID ID_SHORT_DOM = 0; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '!'; -- CONFIG
    DECLARE MODULO_SIS_ID ID_CHAR_DOM = '"'; -- RETAGUARDA
    --DECLARE MODULO_SIS_ID ID_CHAR_DOM = '#'; -- PDV
    --DECLARE ACAO_SIS_ID ID_CHAR_DOM = '%'; -- INSERIR
    DECLARE ACAO_SIS_ID ID_CHAR_DOM = '&'; -- ALTERAR
    DECLARE LOG_ID_RET BIGINT;
  BEGIN
    -- EST_SAIDA_PA.ALTERAR_DO COD
    
    SELECT LOG_ID_RET FROM LOG_PA.LOG_NOVO_GET
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_PESSOA_ID,
      :MODULO_SIS_ID,
      :ACAO_SIS_ID,
      :FEATURE_SIS_ID,
      :MACHINE_ID
    ) INTO :LOG_ID_RET;

    EXECUTE PROCEDURE LOG_PA.LOG_ENVOLVE_ID_INS
    (
      :LOJA_ID,
      :TERMINAL_ID,
      :LOG_ID_RET,
      0, -- LOG_ORDEM

      :LOJA_ID, -- LOJA_ID_ENVOLVIDO SMALLINT,
      :TERMINAL_ID, -- TERMINAL_ID_ENVOLVIDO SMALLINT,
      :EST_MOV_ID, -- ID_ENVOLVIDO INTEGER,
      0 -- ORDEM_ENVOLVIDO SMALLINT
    );

    UPDATE EST_SAIDA SET
    EST_SAIDA_MOTIVO_ID = :EST_SAIDA_MOTIVO_ID
    WHERE LOJA_ID = :LOJA_ID
      AND TERMINAL_ID = :TERMINAL_ID
      AND EST_MOV_ID = :EST_MOV_ID;
  END
END^
SET TERM ;^
```
COMANDO FIM

DBATUALIZ FIM
