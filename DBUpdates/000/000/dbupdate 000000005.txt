    inicio
-----------------------------
DBATUALIZ INI
DBATUALIZ_ASSUNTO=POPULAR TABELAS DE USUARIOS
DBATUALIZ_OBJETIVO=POPULA PERFIL_DE_USO
DBATUALIZ_OBS=


///////////////////////////
//
// GENERO ENSURE RECORDS
//
///////////////////////////
COMANDO INI
TIPO_COMANDO=ENSURE RECORDS
OBJETO_NOME=PERFIL_USO
COLUNAS INI

CSV INI
PERFIL_USO_ID;NOME;DE_SISTEMA
0;NAO INDICADO;TRUE
1;SUPORTE TECNICO;TRUE
2;GERENTE;TRUE

CSV FIM
COMANDO FIM


SQL> SHOW TABLE PESSOA;
LOJA_ID                         (ID_SHORT_DOM) SMALLINT Not Null
TERMINAL_ID                     (ID_SHORT_DOM) SMALLINT Not Null
PESSOA_ID                       (ID_DOM) INTEGER Not Null
NOME                            (NOME_DOM) VARCHAR(60) Not Null
APELIDO                         (NOME_RED_DOM) VARCHAR(20) Nullable

NOME_FANTASIA                   (NOME_DOM) VARCHAR(60) Nullable
GENERO_ID                       CHAR(1) Not Null DEFAULT ' '
ESTADO_CIVIL_ID                 CHAR(1) Not Null DEFAULT ' '
C                               VARCHAR(15) Nullable
I                               VARCHAR(15) Nullable
M                               VARCHAR(15) Nullable
M_UF                            CHAR(2) Nullable
EMAIL                           VARCHAR(50) Nullable
DT_NASC                         DATE Nullable
DTH_EDIT                        TIMESTAMP Nullable
DTH_CRI                         TIMESTAMP Nullable DEFAULT 'NOW'
CONSTRAINT PESSOA_REF_ESTADO_CIVIL_FK:
  Foreign key (ESTADO_CIVIL_ID)    References ESTADO_CIVIL (ESTADO_CIVIL_ID)
CONSTRAINT PESSOA_REF_GENERO_FK:
  Foreign key (GENERO_ID)    References GENERO (GENERO_ID)
CONSTRAINT PESSOA_PK:
  Primary key (LOJA_ID, TERMINAL_ID, PESSOA_ID)

# GERAR STORED PROCEDURE EM FIREBIRD

## ESTRUTURA DA TABELA

  CREATE TABLE PESSOA
(
LOJA_ID                         (ID_SHORT_DOM) SMALLINT Not Null,
TERMINAL_ID                     (ID_SHORT_DOM) SMALLINT Not Null,
PESSOA_ID                       (ID_DOM) INTEGER Not Null,
NOME                            (NOME_DOM) VARCHAR(60) Not Null,
APELIDO                         (NOME_RED_DOM) VARCHAR(20)
);

A CHAVE PRIMÁRIA É FORMADA PELOS CAMPOS LOJA_ID, TERMINAL_ID E PESSOA_ID

## SEQUENCE PARA A CHAVE PRIMÁRIA

SE CHAMA PESSOA_SEQ

## PACKAGE

PRECISA SER CIRADA A PACKAGE PESSOA_PA

## ASSINATURA DA STORED PROCEDURE

PROCEDURE PESSOA_GARANTIR(
LOJA_ID                         (ID_SHORT_DOM) 
TERMINAL_ID                     (ID_SHORT_DOM) 
NOME                            (NOME_DOM) 
APELIDO                         VARCHAR(20)
PESSOA_ID                       INTEGER 
)
RETURNS
(
PESSOA_ID                       INTEGER 
)
  
## MEU PEDIDO

- DENTRO DA PACKAGE PESSOA_PA CRIE A PROCEDURE
- ELA DEVE RECEBER LOJA_ID, TERMINAL_ID E NOME COMO obrigatorios.
- SE PESSOA_ID FOR NULL, DEVE GERAR NOVO CODIGO USANDO A SEQUENCE E DEVER RETORNAR ESTE PESSOA_ID
- SE PESSOA_ID NAO FOR NULO, GRAVA O REGISTRO COM ESTE VALOR E RETORNA O MESMO VALOR QUE FOI ENVIADO NO PARAMETRO
- DEVE USAR O COMANDO `UPDATE OR INSERT` PARA GARANTIR QUE O REGISTRO DESTA PESSOA EXISTA

Obrigado!







a tabela funcionario possui somente tres colunas. exatamente a chave primaria da tabela pessoa. ela também usa estas tres colunas como sua chave primaria. a estrutura de funcionario é:
```firebird
CREATE TABLE FUNCIONARIO
(
  LOJA_ID ID_SHORT_DOM
  , TERMINAL_ID ID_SHORT_DOM
  , PESSOA_ID ID_DOM
);
ALTER TABLE FUNCIONARIO
ADD CONSTRAINT FUNCIONARIO_PK
PRIMARY KEY (LOJA_ID, TERMINAL_ID, PESSOA_ID);
```
gere, POR FAVOR, uma stored procedure chamada funcionario_garantir

A PROCEDURE funcionario_garantir VAI CHAMAR A PROCEDURE PESSOA_GARANTIR, ENTAO VAI RECEBER OS MESMOS PARAMETROS, PARA CONSEGUIR ENVIA-LOS A PESSOA_GARANTIR

ELA VAI RETORNAR O VALOR DE PESSOA_ID QUE FOI RETORNADO PELA PROCEDURE PESSOA_GARANTIR

A FUNCIONARIO GARANTIR VAI USAR também O COMANDO  UPDATE OR INSERT PARA GARANTIR QUE O REGISTRO EXISTE NA TABELA FUNCIONARIO

PROCEDURE FUNCIONARIO_GARANTIR
(
  LOJA_ID (ID_SHORT_DOM) 
  TERMINAL_ID (ID_SHORT_DOM) 
  NOME (NOME_DOM) 
  APELIDO VARCHAR(20)
  PESSOA_ID INTEGER 
)
RETURNS
(
  PESSOA_ID_RETORNADA INTEGER 
)

Obrigado!



POR FIM, 

TEMOS A TABELA

CREATE TABLE USUARIO
(
  LOJA_ID ID_SHORT_DOM
  , TERMINAL_ID ID_SHORT_DOM
  , PESSOA_ID ID_DOM
  , NOME_USU NOME_RED_DOM
  , SENHA SENHA_DOM
);
ALTER TABLE USUARIO
ADD CONSTRAINT USUARIO_PK
PRIMARY KEY (LOJA_ID, TERMINAL_ID, PESSOA_ID);

PEÇO PARA GERAR UMA STORED PROCEDURE USUARIO_GARANTIR, QUE VAI CHAMAR FUNCIONARIO_GARANTIR

ENTAO A USUARIO_GARANTIR VAI RECEBER PARAMETROS PRA GAVAR NA TABELA USUARIO E PARAMETROS QUE SERAO ENVIADOA À FUNCIONARIO_GARANTIR

A ASSINATURA FICARÁ:

PROCEDURE USUARIO_GARANTIR
(
  LOJA_ID ID_SHORT_DOM,
  TERMINAL_ID ID_SHORT_DOM,
  NOME NOME_DOM,
  NOME_USU NOME_RED_DOM,
  SENHA SENHA_DOM,
  APELIDO VARCHAR(20),
  PESSOA_ID INTEGER
)
RETURNS
(
  PESSOA_ID_RETORNADA INTEGER 
)

A PROCEDURE FUNCIONARIO_GARANTIR TAMBÉM VAI USAR O COMANDO `UPDATE OR INSERT` PARA GARANTIR QUE O REGISTRO EXISTA NA TABELA USUARIO

OBRIGADO!